{"version":3,"sources":["components/Hero/HeroStyles.js","components/Hero/SearchBar/SearchBarStyles.js","components/Hero/SearchBar/SearchBar.js","components/Hero/SpeciesSearch/SpeciesSearch.js","components/Hero/SpeciesContainer/SpeciesContainer.js","components/Hero/Hero.js","feature/SpeciesSlice.js","components/Navbar/NavStyles.js","components/Navbar/Nav.js","pages/HomePageStyle.js","pages/HomePage.js","components/Members/Members.js","pages/SingleSpeciesPageStyle.js","feature/BirdsSlice.js","pages/SingleSpeciesPage.js","pages/SingleBirdStyle.js","components/Charts/BarChart.js","components/Charts/LineChart.js","pages/SingleBird.js","feature/EntriesSlice.js","pages/EntriesPage.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["HeroContainer","styled","div","HeroWrapper","BackgroundOverlay","SearchContainer","SearchWrapper","SearchLabel","h3","SearchInput","input","SearchBar","value","handleChange","type","onChange","SpeciesSearch","results","Container","className","map","result","Card","as","Link","to","name","Image","src","img","Content","Header","id","SpeciesContainer","data","useSelector","state","species","family","Hero","useState","setValue","filter","length","toLowerCase","includes","e","target","initialState","description","SpeciesSlice","createSlice","reducers","addSpecies","action","newSpecies","Math","random","payload","desc","date","Date","now","toLocaleString","split","push","deleteSpecies","birds","updateSpecies","console","log","actions","NavContainer","NavTitle","LinkR","PlusIcon","AddSpeciesButton","button","Nav","dispatch","useDispatch","open","setOpen","Nameinput","setName","Descriptioninput","setDescription","imageinput","setImage","i","window","location","pathname","onClick","Modal","onClose","onOpen","image","size","wrapped","Description","style","display","flexDirection","padding","width","maxWidth","marginLeft","Input","placeholder","marginBottom","Form","TextArea","height","Actions","Button","content","labelPosition","icon","CheckExist","alert","positive","PageWrapper","HomePage","Members","params","bird","species_id","color","SingleSpeciesPageWrapper","SingleSpeciesContainer","SingleSpeciesWrapper","SingleSpeciesImage","SingleSpeciesContent","SingleSpeciesName","h1","SingleSpeciesDescription","p","DeleteButton","sex","weights","weight","created_at","birdsSlice","addBird","newBird","speciesId","deletebird","splice","SingleSpeciesPage","currentspecies_desc","currentspecies_id","currentspecies_img","currentspecies_name","match","history","useHistory","currentspecies","j","k","setNewDescription","Img","setNewImg","updatedSpecies","weightInput","setWeight","openBird","setOpenBird","BirdNameInput","setBirdName","BirdImageInput","setBirdImage","BirdSexInput","setSex","birdList","trigger","position","right","margin","cursor","zIndex","defaultValue","go","label","Dropdown","options","key","text","marginTop","toUpperCase","CheckValid","SingleBirdPageWrapper","Backbutton","SingleBirdContainer","SingleBirdWrapper","ImageWrapper","SingleBirdImage","SingleBirdContent","SingleBirdName","SingleBirdSpecies","SingleBirdSex","SingleBirdWeight","ViewEntries","DeleteBird","AnalysisContainer","VisualContainer","StatsContainer","StatsWrapper","Statsdetail","ChartContainer","ChartChangeH1Line","ChartChangeH1Bar","BarChart","datasets","dataset","labels","backgroundColor","borderWidth","borderColor","maintainAspectRatio","scales","xAxes","ticks","maxRotation","minRotation","gridLines","offsetGridLines","yAxes","beginAtZero","LineChart","resposive","y","SingleBird","currentbird_img","currentbird_name","currentbird_id","currentbird_weights","currentbird_sex","currentbird_species","birdsid","Object","values","stats","avg_weight","parseFloat","d3","toFixed","min_weights","max_weights","median_weights","weights_dev","LineActive","setLineActive","bardetails","goBack","entriesSlice","addWeights","newWeight","toString","entry","species_name","EntriesPage","allEntries","currentEntries","setcurrentEntries","ts","useEffect","birdName","toLocaleDateString","toLocaleTimeString","open2","setOpen2","setnewWeight","newEntries","a","details","index","Icon","customHistory","createBrowserHistory","App","document","title","exact","path","component","store","configureStore","reducer","SpeciesReducer","BirdsReducer","entries","EntriesReducer","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc55004d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const HeroContainer = styled.div`\n  width: 100%;\n`;\n\nexport const HeroWrapper = styled.div`\n  position: relative;\n  max-width: 100vw;\n  max-height: 790px;\n  z-index: 1;\n`;\n\nexport const BackgroundOverlay = styled.div`\n  width: 100%;\n`;\n","import styled from \"styled-components\";\n\nexport const SearchContainer = styled.div`\n  background-color: transparent;\n  display: flex;\n  padding: 40px;\n  width: 500px;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n\n  //Styling the input field\n  [type=\"text\"] {\n    padding: 5px;\n  }\n\n  @media (min-width: 320px) and (max-width: 568px) {\n    padding: 0px;\n    margin: 0px;\n    padding-top: 10px;\n    width: 100vw;\n    text-align: center;\n  }\n`;\n\nexport const SearchWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SearchLabel = styled.h3`\n  font-size: 18px;\n  color: white;\n  margin-bottom: 10px;\n  font-size: 20px;\n\n  @media (min-width: 320px) and (max-width: 568px) {\n    font-size: 18px;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  opacity: 0.7;\n  border-radius: 10px;\n  border: none;\n  outline: none;\n  width: 300px;\n  height: 30px;\n\n  @media (min-width: 320px) and (max-width: 568px) {\n    width: 250px;\n    height: 30px;\n    border-radius: 5px;\n  }\n`;\n","import React from 'react'\nimport {\n    SearchContainer,\n    SearchWrapper,\n    SearchLabel,\n    SearchInput,\n} from './SearchBarStyles'\n\nfunction SearchBar({value, handleChange}) {\n\n    return (\n        <div>\n            <SearchContainer>\n                <SearchWrapper>\n                    <SearchLabel> Search by name </SearchLabel>\n                    <SearchInput\n                        type=\"text\"\n                        value={value}\n                        onChange={handleChange}\n                    />\n                </SearchWrapper>\n            </SearchContainer>\n        </div>\n    )\n}\n\nexport default SearchBar\n","import { Link } from 'react-router-dom';\nimport { Card, Container, Image} from \"semantic-ui-react\";\nimport './SpeciesSearchStyle.css'\n\nfunction SpeciesSearch({results}) {\n\n  \n    return (\n      <div>\n        <Container className=\"card--container--search\">\n          {results.map(result => \n          <Card \n            className=\"CardStyle--search\" \n            key={result.id}\n            as={Link}\n            to={`/species/${result.name}`}\n            >\n            <Image \n                className=\"CardStyle__img--search\"\n                src={result.img}/>\n            <Card.Content className=\"CardStyle--content--search\">\n                <Card.Header>{result.name}</Card.Header>\n            </Card.Content>\n          </Card>\n        )}\n        </Container>\n      </div>\n    )\n}\n\nexport default SpeciesSearch","import React from \"react\";\nimport { Card, Container, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport \"./SpeciesContainerStyle.css\";\nimport { useSelector } from \"react-redux\";\n\nfunction SpeciesContainer() {\n  // pulling state from redux\n  const species = useSelector((state) => state.species);\n\n  const data = species.map((family) => {\n    return (\n      <Card\n        className=\"CardStyle\"\n        key={family.id}\n        as={Link}\n        to={`/species/${family.name}`}\n      >\n        <div className=\"image--wrapper\">\n          <Image className=\"CardStyle__img\" src={family.img} />\n        </div>\n        <Card.Content className=\"CardStyle--content\">\n          <Card.Header>{family.name}</Card.Header>\n        </Card.Content>\n      </Card>\n    );\n  });\n\n  return (\n    <div className=\"TotalContainer\">\n      <Container className=\"card--container\">{data}</Container>\n    </div>\n  );\n}\n\nexport default SpeciesContainer;\n","import React, { useState } from \"react\";\nimport { HeroWrapper, BackgroundOverlay, HeroContainer } from \"./HeroStyles\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport SpeciesSearch from \"./SpeciesSearch/SpeciesSearch\";\nimport SpeciesContainer from \"./SpeciesContainer/SpeciesContainer\";\nimport { useSelector } from \"react-redux\";\n\nfunction Hero() {\n  const species = useSelector((state) => state.species);\n\n  // Getting value from input search bar\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e) => {\n    setValue(e);\n  };\n\n  //filtering the state to display search result\n  const results = species.filter((data) => {\n    if (value === \"\" && value.length > 3) {\n      return data;\n    } else {\n      if (data.name.toLowerCase().includes(value.toLowerCase())) {\n        return data;\n      }\n    }\n  });\n\n  return (\n    <HeroContainer>\n      <HeroWrapper>\n        <BackgroundOverlay>\n          <SearchBar\n            value={value}\n            handleChange={(e) => handleChange(e.target.value)}\n          />\n          {!value ? <SpeciesContainer /> : <SpeciesSearch results={results} />}\n        </BackgroundOverlay>\n      </HeroWrapper>\n    </HeroContainer>\n  );\n}\n\nexport default Hero;\n","import { createSlice, current } from \"@reduxjs/toolkit\";\n\n//shows all the species\n//Each species will have different birds of different name\nconst initialState = [\n  {\n    id: 1,\n    name: \"American Robin\",\n    description:\n      \"The quintessential early bird, American Robins are common sights on lawns across North America, where you often see them tugging earthworms out of the ground. Robins are popular birds for their warm orange breast, cheery song, and early appearance at the end of winter. Though they’re familiar town and city birds, American Robins are at home in wilder areas, too, including mountain forests and Alaskan wilderness\",\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/303441381-480px.jpg\",\n  },\n  {\n    id: 2,\n    name: \"Northern Cardinal\",\n    description:\n      \"The male Northern Cardinal is perhaps responsible for getting more people to open up a field guide than any other bird. They’re a perfect combination of familiarity, conspicuousness, and style: a shade of red you can’t take your eyes off. Even the brown females sport a sharp crest and warm red accents. Cardinals don’t migrate and they don’t molt into a dull plumage, so they’re still breathtaking in winter’s snowy backyards. In summer, their sweet whistles are one of the first sounds of the morning.\",\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/297087301-480px.jpg\",\n  },\n  {\n    id: 3,\n    name: \"Blue Jay\",\n    description:\n      \"This common, large songbird is familiar to many people, with its perky crest; blue, white, and black plumage; and noisy calls. Blue Jays are known for their intelligence and complex social systems with tight family bonds. Their fondness for acorns is credited with helping spread oak trees after the last glacial period.\",\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/311635911-480px.jpg\",\n  },\n  {\n    id: 4,\n    name: \"American Crow\",\n    description:\n      \"American Crows are familiar over much of the continent: large, intelligent, all-black birds with hoarse, cawing voices. They are common sights in treetops, fields, and roadsides, and in habitats ranging from open woods and empty beaches to town centers. They usually feed on the ground and eat almost anything—typically earthworms, insects and other small animals, seeds, and fruit; also garbage, carrion, and chicks they rob from nests. Their flight style is unique, a patient, methodical flapping that is rarely broken up with glides.\",\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/59858041-480px.jpg\",\n  },\n  {\n    id: 5,\n    name: \"Fish Crow\",\n    description:\n      \"Not everyone realizes it, but there are two kinds of crows across much of the eastern United States. Looking almost identical to the ubiquitous American Crow, Fish Crows are tough to identify until you learn their nasal calls. Look for them around bodies of water, usually in flocks and sometimes with American Crows. They are supreme generalists, eating just about anything they can find. Fish Crows have expanded their range inland and northward along major river systems in recent decades.\",\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/302400101-480px.jpg\",\n  },\n];\n\nconst SpeciesSlice = createSlice({\n  name: \"species\",\n  initialState,\n  reducers: {\n    addSpecies: (state, action) => {\n      const newSpecies = {\n        id: Math.random(),\n        name: action.payload.name,\n        description: action.payload.desc,\n        img: action.payload.img,\n        date: new Date(Date.now()).toLocaleString().split(\",\")[0],\n      };\n      state.push(newSpecies);\n    },\n\n    deleteSpecies: (state = initialState, action) => {\n      return state.filter((birds) => birds.name !== action.payload.name);\n    },\n\n    updateSpecies: (state = initialState, action) => {\n      state.map((birds) => console.log(birds));\n\n      return {\n        ...state,\n        species: state.map((birds) =>\n          birds.id === action.payload.id\n            ? { ...birds, description: birds.description, img: birds.img }\n            : birds\n        ),\n      };\n    },\n  },\n});\n\nexport const { addSpecies, deleteSpecies, updateSpecies } =\n  SpeciesSlice.actions;\n\n//export posts reducer function so that it can be imported into store.js\nexport default SpeciesSlice.reducer;\n","import styled from \"styled-components\";\nimport { Link as LinkR } from \"react-router-dom\";\n\nexport const NavContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  background-color: rgba(49, 103, 70, 0.6);\n  color: c1a673;\n  display: flex;\n  flex-direction: column;\n  padding: 0 10px;\n\n  @media (min-width: 320px) and (max-width: 568px) {\n    width: 100vw;\n    align-items: center;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n\nexport const NavTitle = styled(LinkR)`\n  padding: 10px;\n  margin-left: 10px;\n  font-size: 35px;\n  text-decoration: none;\n  color: black;\n  cursor: pointer;\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  &:hover {\n    color: white;\n  }\n\n  @media (min-width: 320px) and (max-width: 568px) {\n    color: white;\n  }\n`;\n\nexport const PlusIcon = styled.div`\n  display: none;\n  background-color: rgb(208, 212, 206);\n  height: 25px;\n  width: 25px;\n  border-radius: 50%;\n  font-size: 22px;\n  text-align: center;\n  justify-content: center;\n\n  @media (min-width: 320px) and (max-width: 568px) {\n    display: block;\n  }\n`;\n\nexport const AddSpeciesButton = styled.button`\n  padding: 10px 5px;\n  border-radius: 10px;\n  width: 100%;\n  max-width: 150px;\n  margin-top: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  opacity: 0.7;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  @media (min-width: 320px) and (max-width: 568px) {\n    display: none;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Button, TextArea, Image, Modal, Input, Form } from \"semantic-ui-react\";\nimport { addSpecies } from \"../../feature/SpeciesSlice\";\nimport {\n  NavContainer,\n  NavTitle,\n  AddSpeciesButton,\n  PlusIcon,\n} from \"./NavStyles\";\n\nfunction Nav() {\n  const species = useSelector((state) => state.species);\n  const dispatch = useDispatch();\n\n  //ADD NEW SPECIES\n  const [open, setOpen] = useState(false);\n  const [Nameinput, setName] = useState(\"\");\n  const [Descriptioninput, setDescription] = useState(\"\");\n  const [imageinput, setImage] = useState(\"\");\n\n  let i = 0;\n  const CheckExist = () => {\n    for (i; i < species.length; i++) {\n      if (species[i].name === Nameinput) {\n        setName(\"\");\n        setDescription(\"\");\n        setImage(\"\");\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n\n  const NewSpecies = () => {\n    dispatch(\n      addSpecies({\n        name: Nameinput,\n        description: Descriptioninput,\n        img: imageinput,\n      })\n    );\n  };\n\n  const AddSpecies = () => {\n    CheckExist() ? NewSpecies() : alert(\"Species Name Already Exists!\");\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      <NavContainer>\n        <NavTitle to=\"/birdex-redux\"> BirdDex </NavTitle>\n        {window.location.pathname === \"/birdex-redux\" ? (\n          <>\n            <AddSpeciesButton onClick={() => setOpen(!open)}>\n              Add new species\n            </AddSpeciesButton>\n            <PlusIcon onClick={() => setOpen(!open)}>+</PlusIcon>\n          </>\n        ) : null}\n      </NavContainer>\n\n      {/* Modal TO ADD NEW SPECIES*/}\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n      >\n        <Modal.Header>Add New Species</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={imageinput} wrapped />\n          <Modal.Description\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"10px\",\n              width: \"100%\",\n              maxWidth: \"350px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            <Input\n              placeholder=\"Name\"\n              type=\"text\"\n              value={Nameinput}\n              onChange={(e) => setName(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Form>\n              <TextArea\n                placeholder=\"Description\"\n                value={Descriptioninput}\n                onChange={(e) => setDescription(e.target.value)}\n                style={{ marginBottom: \"20px\", height: \"200px\" }}\n              />\n            </Form>\n\n            <Input\n              placeholder=\"Image Address\"\n              type=\"text\"\n              value={imageinput}\n              onChange={(e) => setImage(e.target.value)}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Add\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={AddSpecies}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Nav;\n","import styled from \"styled-components\";\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  background: url(\"https://images.unsplash.com/photo-1455218873509-8097305ee378?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\")\n    center center no-repeat;\n  background-size: cover;\n  min-height: 100%;\n  min-width: 1024px;\n  overflow: hidden;\n\n  /* Set up proportionate scaling */\n  width: 100%;\n  height: auto;\n\n  /* Set up positioning */\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  @media (min-width: 320px) and (max-width: 568px) {\n    overflow-y: scroll;\n    flex-direction: column;\n  }\n`;\n","import React from \"react\";\nimport Hero from \"../components/Hero/Hero\";\nimport Nav from \"../components/Navbar/Nav\";\nimport { PageWrapper } from \"./HomePageStyle\";\n\nfunction HomePage() {\n  return (\n    <PageWrapper>\n      <Nav />\n      <Hero />\n    </PageWrapper>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Container, Image } from \"semantic-ui-react\";\nimport \"./MembersStyle.css\";\n\nfunction Members(params) {\n  const birds = useSelector((state) => state.birds);\n\n  //MUST INCLUDE RETURN IF NOT NTH WILL BE SHOWN\n  const data = birds.map((bird) => {\n    if (bird.species_id === params.id) {\n      return (\n        <Card\n          className=\"Card--birdStyle\"\n          key={bird.id}\n          as={Link}\n          to={`/birds/${bird.name}/${bird.id}`}\n        >\n          <div className=\"img--wrapper\">\n            <Image className=\"bird__img\" src={bird.img} />\n          </div>\n          <Card.Content>\n            <Card.Header style={{ color: \"white\" }}>{bird.name}</Card.Header>\n          </Card.Content>\n        </Card>\n      );\n    }\n  });\n\n  return (\n    <div className=\"members__wrapper\">\n      <h2 className=\"container__title\">Members</h2>\n      <Container className=\"birdStyleContainer\">{data}</Container>\n    </div>\n  );\n}\n\nexport default Members;\n","import styled from 'styled-components'\n\nexport const SingleSpeciesPageWrapper = styled.div `\n  display: flex;\n  background: url(\"https://images.unsplash.com/photo-1455218873509-8097305ee378?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\")\n  center center\n  no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 100vh;\n`\nexport const SingleSpeciesContainer = styled.div `\n  z-index: 1;\n  margin-left: auto;\n  margin-right: auto;\n  overflow: hidden;\n`\n\nexport const SingleSpeciesWrapper = styled.div `\n  background-color: rgba(0,0,0,0.4);\n  max-height: 300px;\n  color: white;\n  width: 1100px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 100px;\n  display: flex;\n  border-radius: 20px;\n`\n\nexport const SingleSpeciesImage = styled.img `\n  object-fit: cover;\n  width: 300px;\n  border-radius: 20px 0 0 20px;\n  background-position: center center;\n`\n\nexport const SingleSpeciesContent = styled.div `\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  margin-left: 10px;\n`\n\nexport const SingleSpeciesName = styled.h1  `\n  font-size: 50px;\n  margin-bottom: 20px;\n`\n\nexport const SingleSpeciesDescription = styled.p `\n  font-size: 16px;\n\n`\n\nexport const DeleteButton = styled.button `\n  position: absolute;\n  right: 0;\n  font-size: 15px;\n  background-color: red;\n  color: white;\n  padding: 5px;\n  border: none;\n  margin: 10px;\n  cursor: pointer;\n  border-radius: 5px;\n`\n\nexport const UpdateButton = styled.button `\n  position: absolute;\n  right: 10%;\n  font-size: 15px;\n  color: white;\n  padding: 5px;\n  border: none;\n  margin: 10px;\n  cursor: pointer;\n  border-radius: 5px;\n`\n","import { createSlice, current } from \"@reduxjs/toolkit\";\n\n//Show individual birds\nconst initialState = [\n  {\n    id: 1,\n    species_id: 1,\n    name: \"Tom\",\n    sex: \"M\",\n    species: \"American Robin\",\n    weights: [\n      {\n        weight: \"20\",\n        created_at: \"1/1/2000\",\n      },\n      {\n        weight: \"50\",\n        created_at: \"1/2/2000\",\n      },\n      {\n        weight: \"80\",\n        created_at: \"1/3/2000\",\n      },\n    ],\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/59858031-480px.jpg\",\n  },\n  {\n    id: 2,\n    species_id: 1,\n    name: \"Mary\",\n    sex: \"M\",\n    species: \"American Robin\",\n    weights: [\n      {\n        weight: \"20\",\n        created_at: \"1/1/2000\",\n      },\n    ],\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/303441871-240px.jpg\",\n  },\n  {\n    id: 3,\n    species_id: 1,\n    name: \"John\",\n    sex: \"M\",\n    species: \"American Robin\",\n    weights: [\n      {\n        weight: \"20\",\n        created_at: \"1/1/2000\",\n      },\n    ],\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/60412921-1280px.jpg\",\n  },\n  {\n    id: 4,\n    species_id: 1,\n    name: \"Harry\",\n    sex: \"M\",\n    species: \"American Robin\",\n    weights: [\n      {\n        weight: \"25\",\n        created_at: \"1/1/2000\",\n      },\n    ],\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/60412941-240px.jpg\",\n  },\n];\n\nconst birdsSlice = createSlice({\n  name: \"birds\",\n  initialState,\n  reducers: {\n    addBird: (state = initialState, action) => {\n      const newBird = {\n        id: action.payload.id,\n        species_id: action.payload.speciesId,\n        name: action.payload.name,\n        sex: action.payload.sex,\n        species: action.payload.species,\n        weights: [\n          {\n            weight: action.payload.weight,\n            created_at: new Date(Date.now()).toLocaleString().split(\",\")[0],\n          },\n        ],\n        img: action.payload.img,\n      };\n      state.push(newBird);\n    },\n\n    deletebird: (state = initialState, action) => {\n      let i;\n      for (i = 0; i < state.length; i++) {\n        if (state[i].id === action.payload.id) {\n          state.splice(i, 1);\n          i--;\n        } else {\n          continue;\n        }\n      }\n      return state;\n    },\n  },\n});\n\nexport const { addBird, deletebird } = birdsSlice.actions;\n\n//export posts reducer function so that it can be imported into store.js\nexport default birdsSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Members from \"../components/Members/Members\";\nimport Nav from \"../components/Navbar/Nav\";\nimport {\n  Button,\n  Modal,\n  Input,\n  Form,\n  TextArea,\n  Image,\n  Dropdown,\n} from \"semantic-ui-react\";\n\nimport {\n  SingleSpeciesContainer,\n  SingleSpeciesWrapper,\n  SingleSpeciesContent,\n  SingleSpeciesName,\n  SingleSpeciesImage,\n  SingleSpeciesDescription,\n  SingleSpeciesPageWrapper,\n  DeleteButton,\n} from \"./SingleSpeciesPageStyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteSpecies, updateSpecies } from \"../feature/SpeciesSlice\";\nimport { addBird } from \"../feature/BirdsSlice\";\n\nfunction SingleSpeciesPage({ match }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Pulling state from store\n  const species = useSelector((state) => state.species);\n  const birds = useSelector((state) => state.birds);\n\n  // Retrieving name from URL params\n  const currentspecies = match.params.name;\n\n  let i;\n  let currentspecies_desc,\n    currentspecies_id,\n    currentspecies_img,\n    currentspecies_name;\n\n  // Matching the name on URL with name in the store\n  for (i = 0; i < species.length; i++) {\n    if (species[i].name === currentspecies) {\n      currentspecies_id = species[i].id;\n      currentspecies_desc = species[i].description;\n      currentspecies_img = species[i].img;\n      currentspecies_name = species[i].name;\n    }\n  }\n\n  const [open, setOpen] = useState(false);\n\n  // Delete species\n  const handleDeleteClick = () => {\n    dispatch(deleteSpecies({ name: currentspecies_name }));\n    history.push(\"/birdex-redux\");\n  };\n\n  // Updating species\n  const [Description, setNewDescription] = useState(\"\");\n  const [Img, setNewImg] = useState(\"\");\n\n  const updatedSpecies = {\n    id: currentspecies_id,\n    name: currentspecies_name,\n    description: Description,\n    img: Img,\n  };\n  const HandleUpdate = () => {\n    if (Description === \"\") {\n      setNewDescription(currentspecies_desc);\n    } else if (Img === \"\") {\n      setNewImg(currentspecies_img);\n    } else {\n      dispatch(updateSpecies(updatedSpecies));\n      history.go(0);\n    }\n  };\n\n  // //If description is null or img is null, set it to the previous value\n  // const HandleUpdate = async() => {\n  //   if (Description === \"\" ){\n  //     setNewDescription(family.speciesdesc)\n  //   } else if (Img === \"\") {\n  //     setNewImg(family.speciesimg)\n  //   } else {\n  //     onSubmitUpdate()\n  //     history.push(`/species/${family.speciesname}`)\n  //   }\n  // }\n\n  // //FOR ADDING NEW BIRD TO THE CURRENT SPECIES\n  // const ts = new Date();\n  // const currentDate = ts.toLocaleDateString(\"en-US\") + ' ' + ts.toLocaleTimeString(\"en-US\")\n\n  const [weightInput, setWeight] = useState(0);\n  const [openBird, setOpenBird] = useState(false);\n  const [BirdNameInput, setBirdName] = useState(\"\");\n  const [BirdImageInput, setBirdImage] = useState(\"\");\n  const [BirdSexInput, setSex] = useState(\"\");\n\n  //For the input field for weight\n  const options = [\n    { key: \"integer\", text: \"integer\", value: \"integer\" },\n    { key: \"decimals\", text: \"decimals\", value: \"decimals\" },\n  ];\n\n  let j, k;\n  let birdList = [];\n  for (k = 0; k < birds.length; k++) {\n    if (birds[k].species === currentspecies_name) {\n      birdList.push(birds[k].name);\n    }\n  }\n\n  const CheckValid = () => {\n    for (j = 0; j < birdList.length; j++) {\n      if (\n        birdList[j] === BirdNameInput ||\n        BirdNameInput === \"\" ||\n        BirdImageInput === \"\" ||\n        weightInput === 0 ||\n        BirdSexInput.toUpperCase() !== (\"M\" || \"F\")\n      ) {\n        setBirdName(\"\");\n        setBirdImage(\"\");\n        setSex(\"\");\n        setWeight(0);\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n\n  const HandleBird = () => {\n    dispatch(\n      addBird({\n        id: Math.random(),\n        speciesId: currentspecies_id,\n        name: BirdNameInput,\n        sex: BirdSexInput.toUpperCase(),\n        species: currentspecies_name,\n        img: BirdImageInput,\n        weight: weightInput,\n      })\n    );\n    setOpenBird(!openBird);\n    history.go(0);\n  };\n\n  const HandleAddBird = () => {\n    CheckValid()\n      ? HandleBird()\n      : alert(\n          \"ERROR: Either bird name already exists, there are blank input fields or weight input is invalid.\"\n        );\n  };\n\n  return (\n    <SingleSpeciesPageWrapper>\n      <Nav />\n      <DeleteButton onClick={handleDeleteClick}>Delete Species</DeleteButton>\n      <SingleSpeciesContainer key={currentspecies_id}>\n        <SingleSpeciesWrapper>\n          <SingleSpeciesImage src={currentspecies_img} />\n          <SingleSpeciesContent>\n            <SingleSpeciesName>{currentspecies_name}</SingleSpeciesName>\n            <SingleSpeciesDescription>\n              {currentspecies_desc}\n            </SingleSpeciesDescription>\n          </SingleSpeciesContent>\n        </SingleSpeciesWrapper>\n        <button\n          className=\"AddBirdButton\"\n          onClick={() => setOpenBird(!openBird)}\n        >\n          Add New Bird\n        </button>\n\n        {currentspecies_id !== null &&\n        currentspecies_name !== null &&\n        currentspecies_img !== null ? (\n          <Members id={currentspecies_id} />\n        ) : null}\n      </SingleSpeciesContainer>\n\n      {/* MODAL TO UPDATE SPECIES*/}\n      <Modal\n        size={\"large\"}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={\n          <Button\n            className=\"update--showmodal--button\"\n            style={{\n              position: \"absolute\",\n              right: 0,\n              margin: \"130px 100px 130px 130px\",\n              cursor: \"pointer\",\n              zIndex: 999,\n            }}\n          >\n            Update Species\n          </Button>\n        }\n      >\n        <Modal.Header>Update Species</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={Img} wrapped />\n          <Modal.Description\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\n          >\n            <Form>\n              <TextArea\n                placeholder=\"Enter description\"\n                defaultValue={currentspecies_desc || Description}\n                onChange={(e) => setNewDescription(e.target.value)}\n                style={{ marginBottom: \"30px\", height: \"150px\", width: \"100%\" }}\n              />\n            </Form>\n            <Input\n              placeholder=\"Enter Image Address\"\n              defaultValue={currentspecies_img || Img}\n              onChange={(e) => setNewImg(e.target.value)}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Update\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={HandleUpdate}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n\n      {/* Modal TO ADD NEW BIRD*/}\n      <Modal\n        onClose={() => setOpenBird(false)}\n        onOpen={() => setOpenBird(true)}\n        open={openBird}\n      >\n        <Modal.Header>Add New Bird</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={BirdImageInput} wrapped />\n          <Modal.Description\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"10px\",\n              width: \"100%\",\n              maxWidth: \"350px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            <Input\n              placeholder=\"Name\"\n              type=\"text\"\n              value={BirdNameInput}\n              onChange={(e) => setBirdName(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Input\n              placeholder=\"Sex\"\n              type=\"text\"\n              value={BirdSexInput}\n              onChange={(e) => setSex(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Input\n              placeholder=\"Image Address\"\n              type=\"text\"\n              value={BirdImageInput}\n              onChange={(e) => setBirdImage(e.target.value)}\n            />\n\n            <Input\n              type=\"number\"\n              label={<Dropdown defaultValue=\"int\" options={options} />}\n              labelPosition=\"right\"\n              placeholder=\"Enter weight\"\n              value={weightInput}\n              onChange={(e) => setWeight(e.target.value)}\n              style={{ marginTop: \"20px\" }}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Add\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={HandleAddBird}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    </SingleSpeciesPageWrapper>\n  );\n}\n\nexport default SingleSpeciesPage;\n","import styled from \"styled-components\";\nimport { Link as LinkR } from \"react-router-dom\";\n\nexport const SingleBirdPageWrapper = styled.div`\n  display: flex;\n  background: url(\"https://images.unsplash.com/photo-1455218873509-8097305ee378?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\")\n    center center no-repeat;\n  background-size: cover;\n  height: 100vh;\n`;\n\nexport const Backbutton = styled(LinkR)`\n  margin-left: 180px;\n  position: absolute;\n  bottom: 0;\n  margin-top: 10px;\n  color: white;\n  font-size: 16px;\n  padding: 10px 10px 10px 30px;\n  text-decoration: none;\n  border-radius: 0 15px 15px 0;\n  padding: 40px;\n  cursor: pointer;\n  opacity: 0.7;\n\n  &:hover {\n    color: white;\n    opacity: 1;\n  }\n`;\n\nexport const SingleBirdContainer = styled.div`\n  margin-top: 40px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SingleBirdWrapper = styled.div`\n  color: white;\n  width: 100%;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  border-radius: 30px;\n`;\nexport const ImageWrapper = styled.div`\n  height: 250px;\n  width: 300px;\n  overflow: hidden;\n  background-position: center;\n  border-radius: 20%;\n`;\n\nexport const SingleBirdImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const SingleBirdContent = styled.div`\n  background-color: rgba(0, 0, 0, 0.4);\n  border-radius: 20px;\n  height: fit-content;\n  width: 300px;\n  display: flex;\n  text-align: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 20px;\n  margin-left: 10px;\n`;\n\nexport const SingleBirdName = styled.h1`\n  font-size: 50px;\n  margin-bottom: 20px;\n`;\n\nexport const SingleBirdSpecies = styled.p`\n  font-size: 16px;\n  padding: 5px;\n`;\n\nexport const SingleBirdSex = styled.p`\n  font-size: 16px;\n  padding: 5px;\n`;\n\nexport const SingleBirdWeight = styled.p`\n  font-size: 16px;\n  padding: 5px;\n`;\n\nexport const ViewEntries = styled(LinkR)`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  margin: 20px;\n  padding: 5px;\n  background-color: white;\n  border-radius: 5px;\n  text-decoration: none;\n  font-size: 18px;\n  cursor: pointer;\n  opacity: 0.7;\n  color: black;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const DeleteBird = styled.button`\n  position: absolute;\n  right: 0;\n  padding: 5px;\n  color: white;\n  background-color: red;\n  margin: 20px;\n  opacity: 0.8;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const AnalysisContainer = styled.div`\n  background-color: rgba(0, 0, 0, 0.6);\n  border: 1px dashed gray;\n  border-radius: 20px;\n  padding: 20px;\n  width: 900px;\n  height: 450px;\n  margin-top: 30px;\n  display: flex;\n`;\n\nexport const VisualContainer = styled.div`\n  max-width: 70%;\n  width: 100%;\n  height: 400px;\n  margin: 10px;\n`;\n\nexport const StatsContainer = styled.div`\n  width: 100%;\n  max-width: 30%;\n  height: 400px;\n  margin: 10px;\n  border-right: 1px dashed gray;\n`;\n\nexport const StatsWrapper = styled.div`\n  padding: 60px 0px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\nexport const Statsdetail = styled.h3`\n  font-size: 1.2rem;\n  padding: 5px;\n  margin: 5px;\n  line-height: 30px;\n`;\n\nexport const ChartContainer = styled.div`\n  width: 80%;\n  height: 80%;\n  margin-top: 40px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ChartChangeH1Line = styled.h1`\n  color: white;\n  font-size: 1.2rem;\n  float: right;\n  cursor: pointer;\n`;\n\nexport const ChartChangeH1Bar = styled.h1`\n  color: white;\n  font-size: 1.2rem;\n  float: right;\n  cursor: pointer;\n`;\n","import React from 'react'\nimport {Bar} from 'react-chartjs-2'\n\nfunction BarChart(datasets) {\n  \n  const dataset = datasets.data\n  return (\n    <div>\n      <Bar\n        data={{\n          labels: dataset.map(data=> data.created_at),\n          datasets: [{\n            label: 'Weight',\n            data: dataset.map(data => data.weight),\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderWidth: 1,\n            borderColor: 'rgb(255, 99, 132)',\n          }]\n        }}\n        height = {200}\n        options = {{\n          maintainAspectRatio: true,\n          scales: {\n            xAxes: [{\n              ticks: {\n                maxRotation: 90,\n                minRotation: 80\n              },\n                gridLines: {\n                offsetGridLines: true \n              }\n            },\n            {\n              position: \"top\",\n              ticks: {\n                maxRotation: 90,\n                minRotation: 80\n              },\n              gridLines: {\n                offsetGridLines: false \n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }}\n      />\n    \n    </div>\n  )\n}\n\nexport default BarChart\n","import React from 'react'\nimport {Line} from 'react-chartjs-2'\n\nfunction LineChart(datasets) {\n  const dataset = datasets.data\n  return (\n    <div>\n      <Line\n        data={{\n          labels: dataset.map(data=> data.created_at),\n          datasets: [{\n            label: 'Weight',\n            data: dataset.map(data => data.weight),\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderWidth: 1,\n            borderColor: 'rgb(255, 99, 132)'\n          }]\n        }}\n        height = {200}\n        options = {{\n          resposive: true,\n          maintainAspectRatio: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }     \n        }}\n      />\n    </div>\n  )\n}\n\nexport default LineChart\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Nav from \"../components/Navbar/Nav\";\nimport * as d3 from \"d3\";\nimport {\n  SingleBirdPageWrapper,\n  SingleBirdContainer,\n  SingleBirdWrapper,\n  SingleBirdContent,\n  SingleBirdName,\n  SingleBirdSpecies,\n  SingleBirdWeight,\n  SingleBirdSex,\n  ImageWrapper,\n  SingleBirdImage,\n  Backbutton,\n  ViewEntries,\n  DeleteBird,\n  AnalysisContainer,\n  VisualContainer,\n  StatsContainer,\n  StatsWrapper,\n  Statsdetail,\n  ChartContainer,\n  ChartChangeH1Bar,\n  ChartChangeH1Line,\n} from \"./SingleBirdStyle\";\nimport BarChart from \"../components/Charts/BarChart\";\nimport LineChart from \"../components/Charts/LineChart\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deletebird } from \"../feature/BirdsSlice\";\n\nfunction SingleBird({ match }) {\n  const birds = useSelector((state) => state.birds);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let i;\n  let currentbird_img,\n    currentbird_name,\n    currentbird_id,\n    currentbird_weights,\n    currentbird_sex,\n    currentbird_species,\n    currentbird_speciesid;\n\n  for (i = 0; i < birds.length; i++) {\n    if (\n      birds[i].name === match.params.name &&\n      birds[i].id == match.params.birdsid\n    ) {\n      currentbird_img = birds[i].img;\n      currentbird_name = birds[i].name;\n      currentbird_id = birds[i].id;\n      currentbird_weights = birds[i].weights;\n      currentbird_sex = birds[i].sex;\n      currentbird_species = birds[i].species;\n      currentbird_speciesid = birds[i].species_id;\n    }\n  }\n\n  // DELETING BIRD (FROM BIRDSDATA AND ENTRIES)\n  const deleteBird = () => {\n    dispatch(\n      deletebird({\n        id: currentbird_id,\n      })\n    );\n    history.push(`/species/${currentbird_species}`);\n  };\n\n  // calculating the weights stats\n  const weights = Object.values(\n    currentbird_weights.map((weights) => weights.weight)\n  );\n\n  const stats = {\n    avg_weight: parseFloat(d3.mean(weights)).toFixed(2),\n    min_weights: d3.min(weights),\n    max_weights: d3.max(weights),\n    median_weights: d3.median(weights),\n    weights_dev: parseFloat(d3.deviation(weights)).toFixed(2),\n  };\n\n  // For the bar and line chart\n  const [LineActive, setLineActive] = useState(false);\n  const bardetails = [];\n  let j;\n  for (j = 0; j < currentbird_weights.length; j++) {\n    bardetails.push({\n      created_at: currentbird_weights[j].created_at,\n      weight: currentbird_weights[j].weight,\n    });\n  }\n\n  return (\n    <SingleBirdPageWrapper>\n      <Nav />\n      <DeleteBird onClick={deleteBird}> Delete Bird </DeleteBird>\n      <SingleBirdContainer key={currentbird_id}>\n        <SingleBirdWrapper>\n          <ImageWrapper>\n            <SingleBirdImage src={currentbird_img} />\n          </ImageWrapper>\n          <SingleBirdContent>\n            <SingleBirdName>{currentbird_name}</SingleBirdName>\n            <SingleBirdSpecies>\n              Species: {currentbird_species}\n            </SingleBirdSpecies>\n            <SingleBirdSex>Sex: {currentbird_sex}</SingleBirdSex>\n            <SingleBirdWeight>\n              {/* Will be using calculated average weight */}\n              Average Weight: {stats.avg_weight}g\n            </SingleBirdWeight>\n          </SingleBirdContent>\n        </SingleBirdWrapper>\n\n        <AnalysisContainer>\n          <StatsContainer>\n            <StatsWrapper>\n              <Statsdetail>Average Weight: {stats.avg_weight}g</Statsdetail>\n              <Statsdetail>Minimum Weight: {stats.min_weights}g</Statsdetail>\n              <Statsdetail>Maximum Weight: {stats.max_weights}g</Statsdetail>\n              <Statsdetail>Median Weight: {stats.median_weights}g</Statsdetail>\n              <Statsdetail>Weight Deviation: {stats.weights_dev}g</Statsdetail>\n            </StatsWrapper>\n          </StatsContainer>\n\n          <VisualContainer>\n            <ChartContainer>\n              {LineActive ? (\n                <LineChart data={bardetails} />\n              ) : (\n                <BarChart data={bardetails} />\n              )}\n            </ChartContainer>\n\n            {LineActive ? (\n              <ChartChangeH1Bar LineActive onClick={() => setLineActive(false)}>\n                Bar Chart\n              </ChartChangeH1Bar>\n            ) : (\n              <ChartChangeH1Line LineActive onClick={() => setLineActive(true)}>\n                Line Chart\n              </ChartChangeH1Line>\n            )}\n          </VisualContainer>\n        </AnalysisContainer>\n      </SingleBirdContainer>\n\n      <Backbutton onClick={() => history.goBack()}> Back </Backbutton>\n      <ViewEntries\n        to={`/birds/${currentbird_name}/${currentbird_id}/${currentbird_species}/entries`}\n      >\n        View Entries\n      </ViewEntries>\n    </SingleBirdPageWrapper>\n  );\n}\n\nexport default SingleBird;\n","import { createSlice, current } from \"@reduxjs/toolkit\";\n\n//Show individual birds\nconst initialState = [\n  {\n    id: 1,\n    species_id: 1,\n    name: \"Tom\",\n    sex: \"M\",\n    species: \"American Robin\",\n    weights: [\n      {\n        weight: \"20\",\n        created_at: \"1/1/2000\",\n      },\n      {\n        weight: \"50\",\n        created_at: \"1/2/2000\",\n      },\n      {\n        weight: \"80\",\n        created_at: \"1/3/2000\",\n      },\n    ],\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/59858031-480px.jpg\",\n  },\n  {\n    id: 2,\n    species_id: 1,\n    name: \"Mary\",\n    sex: \"M\",\n    species: \"American Robin\",\n    weights: [\n      {\n        weight: \"20\",\n        created_at: \"1/1/2000\",\n      },\n    ],\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/303441871-240px.jpg\",\n  },\n  {\n    id: 3,\n    species_id: 1,\n    name: \"John\",\n    sex: \"M\",\n    species: \"American Robin\",\n    weights: [\n      {\n        weight: \"20\",\n        created_at: \"1/1/2000\",\n      },\n    ],\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/60412921-1280px.jpg\",\n  },\n  {\n    id: 4,\n    species_id: 1,\n    name: \"Harry\",\n    sex: \"M\",\n    species: \"American Robin\",\n    weights: [\n      {\n        weight: \"25\",\n        created_at: \"1/1/2000\",\n      },\n    ],\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/60412941-240px.jpg\",\n  },\n];\n\nconst entriesSlice = createSlice({\n  name: \"entries\",\n  initialState,\n  reducers: {\n    addWeights: (state = initialState, action) => {\n      const newWeight = {\n        weight: action.payload.weight.toString(),\n        created_at: new Date(Date.now()).toLocaleString().split(\",\")[0],\n      };\n      state.map((entry) => {\n        if (\n          action.payload.species_name == entry.species &&\n          action.payload.name == entry.name\n        ) {\n          entry.weights.push(newWeight);\n        }\n      });\n    },\n  },\n});\n\nexport const { addWeights } = entriesSlice.actions;\n\n//export posts reducer function so that it can be imported into store.js\nexport default entriesSlice.reducer;\n","import React, { useEffect, useState } from \"react\";\nimport Nav from \"../components/Navbar/Nav\";\nimport { Icon, Button, Modal, Input, Dropdown } from \"semantic-ui-react\";\nimport \"./EntriesPageStyles.css\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addWeights } from \"../feature/EntriesSlice\";\n\nfunction EntriesPage({ match }) {\n  const allEntries = useSelector((state) => state.birds);\n  const [currentEntries, setcurrentEntries] = useState();\n  const dispatch = useDispatch();\n\n  const ts = new Date();\n  const history = useHistory();\n\n  useEffect(() => {\n    const getBirdEntries = () => {\n      allEntries.map((bird) => {\n        if (\n          bird.name === match.params.birdName &&\n          bird.species === match.params.species_name\n        ) {\n          setcurrentEntries(bird.weights);\n        }\n      });\n    };\n\n    getBirdEntries();\n  }, []);\n\n  //State of modal that adds new entry\n  const [open, setOpen] = useState(false);\n  const [weightInput, setWeight] = useState(0);\n  const currentDate =\n    ts.toLocaleDateString(\"en-US\") + \" \" + ts.toLocaleTimeString(\"en-US\");\n\n  //State of modal that updates entry\n  const [open2, setOpen2] = useState(false);\n  const [newWeight, setnewWeight] = useState(\"\");\n\n  //Function to add new entries\n  const newEntries = async () => {\n    if (weightInput <= 0) {\n      alert(\"Incorrect Weight Value!\");\n      setWeight(0);\n    } else {\n      dispatch(\n        addWeights({\n          weight: weightInput,\n          species_name: match.params.species_name,\n          name: match.params.birdName,\n        })\n      );\n      console.log(currentEntries);\n      // history.go(0);\n    }\n  };\n\n  const sendEntry = () => {\n    setOpen(false);\n    newEntries();\n  };\n\n  // DISPLAYING ALL ENTRIES JSX\n\n  //For the input field for weight\n  const options = [\n    { key: \"integer\", text: \"integer\", value: \"integer\" },\n    { key: \"decimals\", text: \"decimals\", value: \"decimals\" },\n  ];\n\n  const table = () => {\n    return (\n      <div className=\"TableContainer\">\n        <div className=\"HeaderContainer\">\n          <div>\n            <p>TimeStamp</p>\n          </div>\n          <div>\n            <p>Weight</p>\n          </div>\n          <div>\n            <p>Edit</p>\n          </div>\n          <div>\n            <p>Delete</p>\n          </div>\n        </div>\n        <div className=\"allEntriesContainer\">\n          {currentEntries?.map((details, index) => {\n            return (\n              <div className=\"EntryContainer\" key={details.index}>\n                <div>\n                  <p>{details.created_at}</p>\n                </div>\n                <div>\n                  <p>{details.weight}g</p>\n                </div>\n                <div>\n                  <Icon\n                    className=\"edit-button\"\n                    name=\"edit\"\n                    size=\"large\"\n                    color=\"green\"\n                    style={{ cursor: \"pointer\" }}\n                  />\n                </div>\n                <div>\n                  <Icon\n                    className=\"delete-button\"\n                    name=\"delete\"\n                    size=\"large\"\n                    color=\"red\"\n                    style={{ cursor: \"pointer\" }}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"EntriesContainer\">\n      <Nav />\n      <div className=\"EntriesWrapper\">\n        <div>{table()}</div>\n      </div>\n\n      {/* Modal To Add New Entry*/}\n      <Modal\n        size={\"tiny\"}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={<Button className=\"showmodal--button\">Add New Entry</Button>}\n      >\n        <Modal.Header>Add New Entry</Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n            <Input\n              label={<Dropdown defaultValue=\"int\" options={options} />}\n              labelPosition=\"right\"\n              placeholder=\"Enter weight\"\n              value={weightInput}\n              onChange={(e) => setWeight(e.target.value)}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Add\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={sendEntry}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n\n      {/* Modal To Update Entry */}\n      <Modal\n        size={\"tiny\"}\n        onClose={() => setOpen2(false)}\n        onOpen={() => setOpen2(true)}\n        open={open2}\n      >\n        <Modal.Header> Edit Entry</Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n            <Input\n              label={<Dropdown defaultValue=\"int\" options={options} />}\n              labelPosition=\"right\"\n              placeholder=\"Enter weight\"\n              value={newWeight}\n              onChange={(e) => setnewWeight(e.target.value)}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Add\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n\n      <Button\n        onClick={() => history.goBack()}\n        content=\"Back\"\n        icon=\"left arrow\"\n        labelPosition=\"left\"\n      />\n    </div>\n  );\n}\n\nexport default EntriesPage;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./pages/HomePage\";\nimport { BrowserRouter as Switch, Router, Route } from \"react-router-dom\";\nimport createBrowserHistory from \"history/createBrowserHistory\";\nimport SingleSpeciesPage from \"./pages/SingleSpeciesPage\";\nimport SingleBird from \"./pages/SingleBird\";\nimport EntriesPage from \"./pages/EntriesPage\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nconst customHistory = createBrowserHistory();\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"B-xcopedia\";\n  }, []);\n\n  return (\n    <Router history={customHistory}>\n      <Switch>\n        <Route exact path=\"/birdex-redux\">\n          <HomePage />\n        </Route>\n\n        {/* Only when u use this format component={} then the params can be pass down */}\n        <Route\n          exact\n          path=\"/species/:name\"\n          component={SingleSpeciesPage}\n        />\n\n        <Route\n          exact\n          path=\"/birds/:name/:birdsid\"\n          component={SingleBird}\n        />\n\n        <Route\n          exact\n          path=\"/birds/:birdName/:birdsid/:species_name/entries\"\n          component={EntriesPage}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport SpeciesReducer from \"../feature/SpeciesSlice\";\nimport BirdsReducer from \"../feature/BirdsSlice\";\nimport EntriesReducer from \"../feature/EntriesSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    species: SpeciesReducer,\n    birds: BirdsReducer,\n    entries: EntriesReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}