[{"/Users/dtzr/Documents/GitHub/birdex-redux/src/index.js":"1","/Users/dtzr/Documents/GitHub/birdex-redux/src/serviceWorker.js":"2","/Users/dtzr/Documents/GitHub/birdex-redux/src/App.js":"3","/Users/dtzr/Documents/GitHub/birdex-redux/src/app/store.js":"4","/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleSpeciesPage.js":"5","/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/EntriesPage.js":"6","/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/HomePage.js":"7","/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleBird.js":"8","/Users/dtzr/Documents/GitHub/birdex-redux/src/feature/SpeciesSlice.js":"9","/Users/dtzr/Documents/GitHub/birdex-redux/src/feature/BirdsSlice.js":"10","/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleSpeciesPageStyle.js":"11","/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/HomePageStyle.js":"12","/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleBirdStyle.js":"13","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Members/Members.js":"14","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Charts/LineChart.js":"15","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/Hero.js":"16","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Charts/BarChart.js":"17","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Navbar/Nav.js":"18","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/HeroStyles.js":"19","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Navbar/NavStyles.js":"20","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/SearchBar/SearchBar.js":"21","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/SpeciesSearch/SpeciesSearch.js":"22","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/SpeciesContainer/SpeciesContainer.js":"23","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/SearchBar/SearchBarStyles.js":"24","/Users/dtzr/Documents/GitHub/birdex-redux/src/feature/EntriesSlice.js":"25"},{"size":627,"mtime":1623170970011,"results":"26","hashOfConfig":"27"},{"size":5014,"mtime":1623170970012,"results":"28","hashOfConfig":"27"},{"size":1234,"mtime":1656343836949,"results":"29","hashOfConfig":"27"},{"size":353,"mtime":1656344691568,"results":"30","hashOfConfig":"27"},{"size":8911,"mtime":1656344399622,"results":"31","hashOfConfig":"27"},{"size":5314,"mtime":1656348531126,"results":"32","hashOfConfig":"27"},{"size":295,"mtime":1641128283377,"results":"33","hashOfConfig":"27"},{"size":4810,"mtime":1656345940985,"results":"34","hashOfConfig":"27"},{"size":4297,"mtime":1656343493969,"results":"35","hashOfConfig":"27"},{"size":2440,"mtime":1656345943257,"results":"36","hashOfConfig":"27"},{"size":1647,"mtime":1623338697837,"results":"37","hashOfConfig":"27"},{"size":532,"mtime":1656343761277,"results":"38","hashOfConfig":"27"},{"size":3556,"mtime":1641224530847,"results":"39","hashOfConfig":"27"},{"size":1073,"mtime":1641223824367,"results":"40","hashOfConfig":"27"},{"size":759,"mtime":1623170970010,"results":"41","hashOfConfig":"27"},{"size":1214,"mtime":1641219459704,"results":"42","hashOfConfig":"27"},{"size":1254,"mtime":1623170970010,"results":"43","hashOfConfig":"27"},{"size":3202,"mtime":1656344184877,"results":"44","hashOfConfig":"27"},{"size":306,"mtime":1625498511458,"results":"45","hashOfConfig":"27"},{"size":835,"mtime":1623170970011,"results":"46","hashOfConfig":"27"},{"size":626,"mtime":1623170970010,"results":"47","hashOfConfig":"27"},{"size":814,"mtime":1623170970010,"results":"48","hashOfConfig":"27"},{"size":981,"mtime":1641181782050,"results":"49","hashOfConfig":"27"},{"size":709,"mtime":1625496877341,"results":"50","hashOfConfig":"27"},{"size":1598,"mtime":1656344849964,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"15m4du8",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dtzr/Documents/GitHub/birdex-redux/src/index.js",[],["109","110"],"/Users/dtzr/Documents/GitHub/birdex-redux/src/serviceWorker.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/App.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/app/store.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleSpeciesPage.js",["111","112","113","114","115","116","117","118","119","120"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Members from \"../components/Members/Members\";\nimport Nav from \"../components/Navbar/Nav\";\nimport {\n  Button,\n  Modal,\n  Input,\n  Form,\n  TextArea,\n  Image,\n  Dropdown,\n} from \"semantic-ui-react\";\n\nimport {\n  SingleSpeciesContainer,\n  SingleSpeciesWrapper,\n  SingleSpeciesContent,\n  SingleSpeciesName,\n  SingleSpeciesImage,\n  SingleSpeciesDescription,\n  SingleSpeciesPageWrapper,\n  DeleteButton,\n} from \"./SingleSpeciesPageStyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteSpecies, updateSpecies } from \"../feature/SpeciesSlice\";\nimport { addBird } from \"../feature/BirdsSlice\";\n\nfunction SingleSpeciesPage({ match }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Pulling state from store\n  const species = useSelector((state) => state.species);\n  const birds = useSelector((state) => state.birds);\n\n  // Retrieving name from URL params\n  const currentspecies = match.params.name;\n\n  let i;\n  let currentspecies_desc,\n    currentspecies_id,\n    currentspecies_img,\n    currentspecies_name;\n\n  // Matching the name on URL with name in the store\n  for (i = 0; i < species.length; i++) {\n    if (species[i].name == currentspecies) {\n      currentspecies_id = species[i].id;\n      currentspecies_desc = species[i].description;\n      currentspecies_img = species[i].img;\n      currentspecies_name = species[i].name;\n    }\n  }\n\n  const [open, setOpen] = useState(false);\n\n  // Delete species\n  const handleDeleteClick = () => {\n    dispatch(deleteSpecies({ name: currentspecies_name }));\n    history.push(\"/birdex-redux\");\n  };\n\n  // Updating species\n  const [Description, setNewDescription] = useState(\"\");\n  const [Img, setNewImg] = useState(\"\");\n\n  const updatedSpecies = {\n    id: currentspecies_id,\n    name: currentspecies_name,\n    description: Description,\n    img: Img,\n  };\n  const HandleUpdate = () => {\n    if (Description == \"\") {\n      setNewDescription(currentspecies_desc);\n    } else if (Img == \"\") {\n      setNewImg(currentspecies_img);\n    } else {\n      dispatch(updateSpecies(updatedSpecies));\n      history.go(0);\n    }\n  };\n\n  // //If description is null or img is null, set it to the previous value\n  // const HandleUpdate = async() => {\n  //   if (Description == \"\" ){\n  //     setNewDescription(family.speciesdesc)\n  //   } else if (Img == \"\") {\n  //     setNewImg(family.speciesimg)\n  //   } else {\n  //     onSubmitUpdate()\n  //     history.push(`/species/${family.speciesname}`)\n  //   }\n  // }\n\n  // //FOR ADDING NEW BIRD TO THE CURRENT SPECIES\n  // const ts = new Date();\n  // const currentDate = ts.toLocaleDateString(\"en-US\") + ' ' + ts.toLocaleTimeString(\"en-US\")\n\n  const [weightInput, setWeight] = useState(0);\n  const [openBird, setOpenBird] = useState(false);\n  const [BirdNameInput, setBirdName] = useState(\"\");\n  const [BirdImageInput, setBirdImage] = useState(\"\");\n  const [BirdSexInput, setSex] = useState(\"\");\n\n  //For the input field for weight\n  const options = [\n    { key: \"integer\", text: \"integer\", value: \"integer\" },\n    { key: \"decimals\", text: \"decimals\", value: \"decimals\" },\n  ];\n\n  let j, k;\n  let birdList = [];\n  for (k = 0; k < birds.length; k++) {\n    if (birds[k].species == currentspecies_name) {\n      birdList.push(birds[k].name);\n    }\n  }\n\n  const CheckValid = () => {\n    for (j = 0; j < birdList.length; j++) {\n      if (\n        birdList[j] == BirdNameInput ||\n        BirdNameInput == \"\" ||\n        BirdImageInput == \"\" ||\n        weightInput == 0 ||\n        BirdSexInput.toUpperCase() != (\"M\" || \"F\")\n      ) {\n        setBirdName(\"\");\n        setBirdImage(\"\");\n        setSex(\"\");\n        setWeight(0);\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n\n  const HandleBird = () => {\n    dispatch(\n      addBird({\n        id: Math.random(),\n        speciesId: currentspecies_id,\n        name: BirdNameInput,\n        sex: BirdSexInput.toUpperCase(),\n        species: currentspecies_name,\n        img: BirdImageInput,\n        weight: weightInput,\n      })\n    );\n    setOpenBird(!openBird);\n    history.go(0);\n  };\n\n  const HandleAddBird = () => {\n    {\n      CheckValid()\n        ? HandleBird()\n        : alert(\n            \"ERROR: Either bird name already exists, there are blank input fields or weight input is invalid.\"\n          );\n    }\n  };\n\n  return (\n    <SingleSpeciesPageWrapper>\n      <Nav />\n      <DeleteButton onClick={handleDeleteClick}>Delete Species</DeleteButton>\n      <SingleSpeciesContainer key={currentspecies_id}>\n        <SingleSpeciesWrapper>\n          <SingleSpeciesImage src={currentspecies_img} />\n          <SingleSpeciesContent>\n            <SingleSpeciesName>{currentspecies_name}</SingleSpeciesName>\n            <SingleSpeciesDescription>\n              {currentspecies_desc}\n            </SingleSpeciesDescription>\n          </SingleSpeciesContent>\n        </SingleSpeciesWrapper>\n        <button\n          className=\"AddBirdButton\"\n          onClick={() => setOpenBird(!openBird)}\n        >\n          Add New Bird\n        </button>\n\n        {currentspecies_id != null &&\n        currentspecies_name != null &&\n        currentspecies_img != null ? (\n          <Members id={currentspecies_id} />\n        ) : null}\n      </SingleSpeciesContainer>\n\n      {/* MODAL TO UPDATE SPECIES*/}\n      <Modal\n        size={\"large\"}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={\n          <Button\n            className=\"update--showmodal--button\"\n            style={{\n              position: \"absolute\",\n              right: 0,\n              margin: \"130px 100px 130px 130px\",\n              cursor: \"pointer\",\n              zIndex: 999,\n            }}\n          >\n            Update Species\n          </Button>\n        }\n      >\n        <Modal.Header>Update Species</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={Img} wrapped />\n          <Modal.Description\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\n          >\n            <Form>\n              <TextArea\n                placeholder=\"Enter description\"\n                defaultValue={currentspecies_desc || Description}\n                onChange={(e) => setNewDescription(e.target.value)}\n                style={{ marginBottom: \"30px\", height: \"150px\", width: \"100%\" }}\n              />\n            </Form>\n            <Input\n              placeholder=\"Enter Image Address\"\n              defaultValue={currentspecies_img || Img}\n              onChange={(e) => setNewImg(e.target.value)}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Update\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={HandleUpdate}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n\n      {/* Modal TO ADD NEW BIRD*/}\n      <Modal\n        onClose={() => setOpenBird(false)}\n        onOpen={() => setOpenBird(true)}\n        open={openBird}\n      >\n        <Modal.Header>Add New Bird</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={BirdImageInput} wrapped />\n          <Modal.Description\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"10px\",\n              width: \"100%\",\n              maxWidth: \"350px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            <Input\n              placeholder=\"Name\"\n              type=\"text\"\n              value={BirdNameInput}\n              onChange={(e) => setBirdName(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Input\n              placeholder=\"Sex\"\n              type=\"text\"\n              value={BirdSexInput}\n              onChange={(e) => setSex(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Input\n              placeholder=\"Image Address\"\n              type=\"text\"\n              value={BirdImageInput}\n              onChange={(e) => setBirdImage(e.target.value)}\n            />\n\n            <Input\n              type=\"number\"\n              label={<Dropdown defaultValue=\"int\" options={options} />}\n              labelPosition=\"right\"\n              placeholder=\"Enter weight\"\n              value={weightInput}\n              onChange={(e) => setWeight(e.target.value)}\n              style={{ marginTop: \"20px\" }}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Add\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={HandleAddBird}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    </SingleSpeciesPageWrapper>\n  );\n}\n\nexport default SingleSpeciesPage;\n","/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/EntriesPage.js",["121","122","123","124","125","126","127","128","129","130","131"],"/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/HomePage.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleBird.js",["132","133","134"],"/Users/dtzr/Documents/GitHub/birdex-redux/src/feature/SpeciesSlice.js",["135","136"],"import { createSlice, current } from \"@reduxjs/toolkit\";\n\n//shows all the species\n//Each species will have different birds of different name\nconst initialState = [\n  {\n    id: 1,\n    name: \"American Robin\",\n    description:\n      \"The quintessential early bird, American Robins are common sights on lawns across North America, where you often see them tugging earthworms out of the ground. Robins are popular birds for their warm orange breast, cheery song, and early appearance at the end of winter. Though they’re familiar town and city birds, American Robins are at home in wilder areas, too, including mountain forests and Alaskan wilderness\",\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/303441381-480px.jpg\",\n  },\n  {\n    id: 2,\n    name: \"Northern Cardinal\",\n    description:\n      \"The male Northern Cardinal is perhaps responsible for getting more people to open up a field guide than any other bird. They’re a perfect combination of familiarity, conspicuousness, and style: a shade of red you can’t take your eyes off. Even the brown females sport a sharp crest and warm red accents. Cardinals don’t migrate and they don’t molt into a dull plumage, so they’re still breathtaking in winter’s snowy backyards. In summer, their sweet whistles are one of the first sounds of the morning.\",\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/297087301-480px.jpg\",\n  },\n  {\n    id: 3,\n    name: \"Blue Jay\",\n    description:\n      \"This common, large songbird is familiar to many people, with its perky crest; blue, white, and black plumage; and noisy calls. Blue Jays are known for their intelligence and complex social systems with tight family bonds. Their fondness for acorns is credited with helping spread oak trees after the last glacial period.\",\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/311635911-480px.jpg\",\n  },\n  {\n    id: 4,\n    name: \"American Crow\",\n    description:\n      \"American Crows are familiar over much of the continent: large, intelligent, all-black birds with hoarse, cawing voices. They are common sights in treetops, fields, and roadsides, and in habitats ranging from open woods and empty beaches to town centers. They usually feed on the ground and eat almost anything—typically earthworms, insects and other small animals, seeds, and fruit; also garbage, carrion, and chicks they rob from nests. Their flight style is unique, a patient, methodical flapping that is rarely broken up with glides.\",\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/59858041-480px.jpg\",\n  },\n  {\n    id: 5,\n    name: \"Fish Crow\",\n    description:\n      \"Not everyone realizes it, but there are two kinds of crows across much of the eastern United States. Looking almost identical to the ubiquitous American Crow, Fish Crows are tough to identify until you learn their nasal calls. Look for them around bodies of water, usually in flocks and sometimes with American Crows. They are supreme generalists, eating just about anything they can find. Fish Crows have expanded their range inland and northward along major river systems in recent decades.\",\n    img: \"https://www.allaboutbirds.org/guide/assets/photo/302400101-480px.jpg\",\n  },\n];\n\nconst SpeciesSlice = createSlice({\n  name: \"species\",\n  initialState,\n  reducers: {\n    addSpecies: (state, action) => {\n      const newSpecies = {\n        id: Math.random(),\n        name: action.payload.name,\n        description: action.payload.desc,\n        img: action.payload.img,\n        date: new Date(Date.now()).toLocaleString().split(\",\")[0],\n      };\n      state.push(newSpecies);\n    },\n\n    deleteSpecies: (state = initialState, action) => {\n      return state.filter((birds) => birds.name != action.payload.name);\n    },\n\n    updateSpecies: (state = initialState, action) => {\n      state.map((birds) => console.log(birds));\n\n      return {\n        ...state,\n        species: state.map((birds) =>\n          birds.id === action.payload.id\n            ? { ...birds, description: birds.description, img: birds.img }\n            : birds\n        ),\n      };\n    },\n  },\n});\n\nexport const { addSpecies, deleteSpecies, updateSpecies } =\n  SpeciesSlice.actions;\n\n//export posts reducer function so that it can be imported into store.js\nexport default SpeciesSlice.reducer;\n","/Users/dtzr/Documents/GitHub/birdex-redux/src/feature/BirdsSlice.js",["137"],"/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleSpeciesPageStyle.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/HomePageStyle.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleBirdStyle.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Members/Members.js",["138","139"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Container, Image } from \"semantic-ui-react\";\nimport \"./MembersStyle.css\";\n\nfunction Members(params) {\n  const birds = useSelector((state) => state.birds);\n\n  //MUST INCLUDE RETURN IF NOT NTH WILL BE SHOWN\n  const data = birds.map((bird) => {\n    if (bird.species_id == params.id) {\n      return (\n        <Card\n          className=\"Card--birdStyle\"\n          key={bird.id}\n          as={Link}\n          to={`/birds/${bird.name}/${bird.id}`}\n        >\n          <div className=\"img--wrapper\">\n            <Image className=\"bird__img\" src={bird.img} />\n          </div>\n          <Card.Content>\n            <Card.Header style={{ color: \"white\" }}>{bird.name}</Card.Header>\n          </Card.Content>\n        </Card>\n      );\n    }\n  });\n\n  return (\n    <div className=\"members__wrapper\">\n      <h2 className=\"container__title\">Members</h2>\n      <Container className=\"birdStyleContainer\">{data}</Container>\n    </div>\n  );\n}\n\nexport default Members;\n","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Charts/LineChart.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/Hero.js",["140"],"import React, { useState } from \"react\";\nimport { HeroWrapper, BackgroundOverlay, HeroContainer } from \"./HeroStyles\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport SpeciesSearch from \"./SpeciesSearch/SpeciesSearch\";\nimport SpeciesContainer from \"./SpeciesContainer/SpeciesContainer\";\nimport { useSelector } from \"react-redux\";\n\nfunction Hero() {\n\n  const species = useSelector((state) => state.species)\n  \n  // Getting value from input search bar\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e) => {\n    setValue(e);\n  };\n\n  //filtering the state to display search result\n  const results = species.filter((data) => {\n    if (value === \"\" && value.length > 3) {\n      return data;\n    } else {\n      if (data.name.toLowerCase().includes(value.toLowerCase())) {\n        return data;\n      }\n    }\n  });\n\n  return (\n    <HeroContainer>\n      <HeroWrapper>\n        <BackgroundOverlay>\n          <SearchBar\n            value={value}\n            handleChange={(e) => handleChange(e.target.value)}\n          />\n          {!value ? <SpeciesContainer /> : <SpeciesSearch results={results} />}\n        </BackgroundOverlay>\n      </HeroWrapper>\n    </HeroContainer>\n  );\n}\n\nexport default Hero;\n","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Charts/BarChart.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Navbar/Nav.js",["141","142","143"],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Button, TextArea, Image, Modal, Input, Form } from \"semantic-ui-react\";\nimport { addSpecies } from \"../../feature/SpeciesSlice\";\nimport { NavContainer, NavTitle, AddSpeciesButton } from \"./NavStyles\";\n\nfunction Nav() {\n  const species = useSelector((state) => state.species);\n  const dispatch = useDispatch();\n\n  let url = window.location.pathname;\n\n  //ADD NEW SPECIES\n  const [open, setOpen] = useState(false);\n  const [Nameinput, setName] = useState(\"\");\n  const [Descriptioninput, setDescription] = useState(\"\");\n  const [imageinput, setImage] = useState(\"\");\n\n  let i = 0;\n  const CheckExist = () => {\n    for (i; i < species.length; i++) {\n      if (species[i].name == Nameinput) {\n        setName(\"\");\n        setDescription(\"\");\n        setImage(\"\");\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n\n  const NewSpecies = () => {\n    dispatch(\n      addSpecies({\n        name: Nameinput,\n        description: Descriptioninput,\n        img: imageinput,\n      })\n    );\n  };\n\n  const AddSpecies = () => {\n    {\n      CheckExist() ? NewSpecies() : alert(\"Species Name Already Exists!\");\n    }\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      <NavContainer>\n        <NavTitle to=\"/birdex-redux\"> BirdDex </NavTitle>\n        {url == \"/birdex-redux\" ? (\n          <AddSpeciesButton onClick={() => setOpen(!open)}>\n            Add new species\n          </AddSpeciesButton>\n        ) : null}\n      </NavContainer>\n\n      {/* Modal TO ADD NEW SPECIES*/}\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n      >\n        <Modal.Header>Add New Species</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={imageinput} wrapped />\n          <Modal.Description\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"10px\",\n              width: \"100%\",\n              maxWidth: \"350px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            <Input\n              placeholder=\"Name\"\n              type=\"text\"\n              value={Nameinput}\n              onChange={(e) => setName(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Form>\n              <TextArea\n                placeholder=\"Description\"\n                value={Descriptioninput}\n                onChange={(e) => setDescription(e.target.value)}\n                style={{ marginBottom: \"20px\", height: \"200px\" }}\n              />\n            </Form>\n\n            <Input\n              placeholder=\"Image Address\"\n              type=\"text\"\n              value={imageinput}\n              onChange={(e) => setImage(e.target.value)}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Add\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={AddSpecies}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Nav;\n","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/HeroStyles.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Navbar/NavStyles.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/SearchBar/SearchBar.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/SpeciesSearch/SpeciesSearch.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/SpeciesContainer/SpeciesContainer.js",["144","145"],"import React, { useEffect, useState } from \"react\";\nimport { Card, Container, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport \"./SpeciesContainerStyle.css\";\nimport { useSelector } from \"react-redux\";\n\nfunction SpeciesContainer() {\n  // pulling state from redux\n  const species = useSelector((state) => state.species);\n  \n  const data = species.map((family) => {\n    return (\n      <Card\n        className=\"CardStyle\"\n        key={family.id}\n        as={Link}\n        to={`/species/${family.name}`}\n      >\n        <div className=\"image--wrapper\">\n          <Image className=\"CardStyle__img\" src={family.img} />\n        </div>\n        <Card.Content className=\"CardStyle--content\">\n          <Card.Header>{family.name}</Card.Header>\n        </Card.Content>\n      </Card>\n    );\n  });\n\n  return (\n    <div className=\"TotalContainer\">\n      <Container className=\"card--container\">{data}</Container>\n    </div>\n  );\n}\n\nexport default SpeciesContainer;\n","/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Hero/SearchBar/SearchBarStyles.js",[],"/Users/dtzr/Documents/GitHub/birdex-redux/src/feature/EntriesSlice.js",["146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":48,"column":25,"nodeType":"153","messageId":"154","endLine":48,"endColumn":27},{"ruleId":"151","severity":1,"message":"152","line":75,"column":21,"nodeType":"153","messageId":"154","endLine":75,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":77,"column":20,"nodeType":"153","messageId":"154","endLine":77,"endColumn":22},{"ruleId":"151","severity":1,"message":"152","line":116,"column":26,"nodeType":"153","messageId":"154","endLine":116,"endColumn":28},{"ruleId":"151","severity":1,"message":"152","line":124,"column":21,"nodeType":"153","messageId":"154","endLine":124,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":125,"column":23,"nodeType":"153","messageId":"154","endLine":125,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":126,"column":24,"nodeType":"153","messageId":"154","endLine":126,"endColumn":26},{"ruleId":"151","severity":1,"message":"152","line":127,"column":21,"nodeType":"153","messageId":"154","endLine":127,"endColumn":23},{"ruleId":"151","severity":1,"message":"155","line":128,"column":36,"nodeType":"153","messageId":"154","endLine":128,"endColumn":38},{"ruleId":"156","severity":1,"message":"157","line":158,"column":5,"nodeType":"158","messageId":"159","endLine":164,"endColumn":6},{"ruleId":"160","severity":1,"message":"161","line":5,"column":3,"nodeType":"162","messageId":"163","endLine":5,"endColumn":7},{"ruleId":"160","severity":1,"message":"164","line":6,"column":3,"nodeType":"162","messageId":"163","endLine":6,"endColumn":8},{"ruleId":"160","severity":1,"message":"165","line":11,"column":3,"nodeType":"162","messageId":"163","endLine":11,"endColumn":12},{"ruleId":"166","severity":1,"message":"167","line":25,"column":29,"nodeType":"168","messageId":"169","endLine":25,"endColumn":31},{"ruleId":"151","severity":1,"message":"152","line":27,"column":21,"nodeType":"153","messageId":"154","endLine":27,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":28,"column":24,"nodeType":"153","messageId":"154","endLine":28,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":36,"column":6,"nodeType":"172","endLine":36,"endColumn":8,"suggestions":"173"},{"ruleId":"160","severity":1,"message":"174","line":38,"column":9,"nodeType":"162","messageId":"163","endLine":38,"endColumn":13},{"ruleId":"160","severity":1,"message":"175","line":45,"column":9,"nodeType":"162","messageId":"163","endLine":45,"endColumn":20},{"ruleId":"160","severity":1,"message":"176","line":51,"column":10,"nodeType":"162","messageId":"163","endLine":51,"endColumn":16},{"ruleId":"160","severity":1,"message":"177","line":51,"column":18,"nodeType":"162","messageId":"163","endLine":51,"endColumn":27},{"ruleId":"160","severity":1,"message":"178","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"152","line":50,"column":19,"nodeType":"153","messageId":"154","endLine":50,"endColumn":21},{"ruleId":"160","severity":1,"message":"179","line":58,"column":7,"nodeType":"162","messageId":"163","endLine":58,"endColumn":28},{"ruleId":"160","severity":1,"message":"180","line":1,"column":23,"nodeType":"162","messageId":"163","endLine":1,"endColumn":30},{"ruleId":"151","severity":1,"message":"155","line":59,"column":49,"nodeType":"153","messageId":"154","endLine":59,"endColumn":51},{"ruleId":"151","severity":1,"message":"152","line":97,"column":25,"nodeType":"153","messageId":"154","endLine":97,"endColumn":27},{"ruleId":"166","severity":1,"message":"181","line":11,"column":33,"nodeType":"168","messageId":"182","endLine":11,"endColumn":35},{"ruleId":"151","severity":1,"message":"152","line":12,"column":25,"nodeType":"153","messageId":"154","endLine":12,"endColumn":27},{"ruleId":"166","severity":1,"message":"183","line":19,"column":41,"nodeType":"168","messageId":"182","endLine":19,"endColumn":43},{"ruleId":"151","severity":1,"message":"152","line":23,"column":27,"nodeType":"153","messageId":"154","endLine":23,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":45,"column":5,"nodeType":"158","messageId":"159","endLine":47,"endColumn":6},{"ruleId":"151","severity":1,"message":"152","line":55,"column":14,"nodeType":"153","messageId":"154","endLine":55,"endColumn":16},{"ruleId":"160","severity":1,"message":"178","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"160","severity":1,"message":"184","line":1,"column":28,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"180","line":1,"column":23,"nodeType":"162","messageId":"163","endLine":1,"endColumn":30},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'TableCell' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allEntries', 'match.params.birdName', and 'match.params.species_name'. Either include them or remove the dependency array.","ArrayExpression",["187"],"'data' is assigned a value but never used.","'currentDate' is assigned a value but never used.","'editId' is assigned a value but never used.","'seteditId' is assigned a value but never used.","'useEffect' is defined but never used.","'currentbird_speciesid' is assigned a value but never used.","'current' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},"Update the dependencies array to be: [allEntries, match.params.birdName, match.params.species_name]",{"range":"190","text":"191"},[859,861],"[allEntries, match.params.birdName, match.params.species_name]"]