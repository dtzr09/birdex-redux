{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Navbar/Nav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Button, TextArea, Image, Modal, Input, Form } from \"semantic-ui-react\";\nimport { addSpecies } from \"../../feature/SpeciesSlice\";\nimport { NavContainer, NavTitle, AddSpeciesButton } from \"./NavStyles\";\nimport { BsPatchPlusFill as PlusIcon } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Nav() {\n  _s();\n\n  const species = useSelector(state => state.species);\n  const dispatch = useDispatch();\n  let url = window.location.pathname; //ADD NEW SPECIES\n\n  const [open, setOpen] = useState(false);\n  const [Nameinput, setName] = useState(\"\");\n  const [Descriptioninput, setDescription] = useState(\"\");\n  const [imageinput, setImage] = useState(\"\");\n  let i = 0;\n\n  const CheckExist = () => {\n    for (i; i < species.length; i++) {\n      if (species[i].name == Nameinput) {\n        setName(\"\");\n        setDescription(\"\");\n        setImage(\"\");\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n\n  const NewSpecies = () => {\n    dispatch(addSpecies({\n      name: Nameinput,\n      description: Descriptioninput,\n      img: imageinput\n    }));\n  };\n\n  const AddSpecies = () => {\n    {\n      CheckExist() ? NewSpecies() : alert(\"Species Name Already Exists!\");\n    }\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavContainer, {\n      children: [/*#__PURE__*/_jsxDEV(NavTitle, {\n        to: \"/birdex-redux\",\n        children: \" BirdDex \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), url == \"/birdex-redux\" ? /*#__PURE__*/_jsxDEV(AddSpeciesButton, {\n        onClick: () => setOpen(!open),\n        children: \"Add new species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Add New Species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          size: \"large\",\n          src: imageinput,\n          wrapped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            padding: \"10px\",\n            width: \"100%\",\n            maxWidth: \"350px\",\n            marginLeft: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Name\",\n            type: \"text\",\n            value: Nameinput,\n            onChange: e => setName(e.target.value),\n            style: {\n              marginBottom: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              placeholder: \"Description\",\n              value: Descriptioninput,\n              onChange: e => setDescription(e.target.value),\n              style: {\n                marginBottom: \"20px\",\n                height: \"200px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Image Address\",\n            type: \"text\",\n            value: imageinput,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Add\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: AddSpecies,\n          positive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nav, \"nBYVrlkiC0U5tQI2jwrwvdCCwuQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Nav;\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/birdex-redux/src/components/Navbar/Nav.js"],"names":["React","useState","useDispatch","useSelector","Button","TextArea","Image","Modal","Input","Form","addSpecies","NavContainer","NavTitle","AddSpeciesButton","BsPatchPlusFill","PlusIcon","Nav","species","state","dispatch","url","window","location","pathname","open","setOpen","Nameinput","setName","Descriptioninput","setDescription","imageinput","setImage","i","CheckExist","length","name","NewSpecies","description","img","AddSpecies","alert","display","flexDirection","padding","width","maxWidth","marginLeft","e","target","value","marginBottom","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Button, TextArea, Image, Modal, Input, Form } from \"semantic-ui-react\";\nimport { addSpecies } from \"../../feature/SpeciesSlice\";\nimport { NavContainer, NavTitle, AddSpeciesButton } from \"./NavStyles\";\nimport { BsPatchPlusFill as PlusIcon } from \"react-icons/bs\";\n\nfunction Nav() {\n  const species = useSelector((state) => state.species);\n  const dispatch = useDispatch();\n\n  let url = window.location.pathname;\n\n  //ADD NEW SPECIES\n  const [open, setOpen] = useState(false);\n  const [Nameinput, setName] = useState(\"\");\n  const [Descriptioninput, setDescription] = useState(\"\");\n  const [imageinput, setImage] = useState(\"\");\n\n  let i = 0;\n  const CheckExist = () => {\n    for (i; i < species.length; i++) {\n      if (species[i].name == Nameinput) {\n        setName(\"\");\n        setDescription(\"\");\n        setImage(\"\");\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n\n  const NewSpecies = () => {\n    dispatch(\n      addSpecies({\n        name: Nameinput,\n        description: Descriptioninput,\n        img: imageinput,\n      })\n    );\n  };\n\n  const AddSpecies = () => {\n    {\n      CheckExist() ? NewSpecies() : alert(\"Species Name Already Exists!\");\n    }\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      <NavContainer>\n        <NavTitle to=\"/birdex-redux\"> BirdDex </NavTitle>\n        {url == \"/birdex-redux\" ? (\n          <AddSpeciesButton onClick={() => setOpen(!open)}>\n            Add new species\n          </AddSpeciesButton>\n        ) : null}\n      </NavContainer>\n\n      {/* Modal TO ADD NEW SPECIES*/}\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n      >\n        <Modal.Header>Add New Species</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={imageinput} wrapped />\n          <Modal.Description\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"10px\",\n              width: \"100%\",\n              maxWidth: \"350px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            <Input\n              placeholder=\"Name\"\n              type=\"text\"\n              value={Nameinput}\n              onChange={(e) => setName(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Form>\n              <TextArea\n                placeholder=\"Description\"\n                value={Descriptioninput}\n                onChange={(e) => setDescription(e.target.value)}\n                style={{ marginBottom: \"20px\", height: \"200px\" }}\n              />\n            </Form>\n\n            <Input\n              placeholder=\"Image Address\"\n              type=\"text\"\n              value={imageinput}\n              onChange={(e) => setImage(e.target.value)}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Add\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={AddSpecies}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}