{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Desktop/Projects/birdex-redux-master/src/pages/SingleSpeciesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Members from \"../components/Members/Members\";\nimport Nav from \"../components/Navbar/Nav\";\nimport { Button, Modal, Input, Form, TextArea, Image, Dropdown } from \"semantic-ui-react\";\nimport { SingleSpeciesContainer, SingleSpeciesWrapper, SingleSpeciesContent, SingleSpeciesName, SingleSpeciesImage, SingleSpeciesDescription, SingleSpeciesPageWrapper, DeleteButton } from \"./SingleSpeciesPageStyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteSpecies, updateSpecies } from \"../feature/SpeciesSlice\";\nimport { addBird } from \"../feature/BirdsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SingleSpeciesPage({\n  match\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Pulling state from store\n  const species = useSelector(state => state.species);\n  const birds = useSelector(state => state.birds);\n\n  // Retrieving name from URL params\n  const currentspecies = match.params.name;\n  let i;\n  let currentspecies_desc, currentspecies_id, currentspecies_img, currentspecies_name;\n\n  // Matching the name on URL with name in the store\n  for (i = 0; i < species.length; i++) {\n    if (species[i].name === currentspecies) {\n      currentspecies_id = species[i].id;\n      currentspecies_desc = species[i].description;\n      currentspecies_img = species[i].img;\n      currentspecies_name = species[i].name;\n    }\n  }\n  const [open, setOpen] = useState(false);\n\n  // Delete species\n  const handleDeleteClick = () => {\n    dispatch(deleteSpecies({\n      name: currentspecies_name\n    }));\n    history.push(\"/birdex-redux\");\n  };\n\n  // Updating species\n  const [Description, setNewDescription] = useState(\"\");\n  const [Img, setNewImg] = useState(\"\");\n  const updatedSpecies = {\n    id: currentspecies_id,\n    name: currentspecies_name,\n    description: Description,\n    img: Img\n  };\n  const HandleUpdate = () => {\n    if (Description === \"\") {\n      setNewDescription(currentspecies_desc);\n    } else if (Img === \"\") {\n      setNewImg(currentspecies_img);\n    } else {\n      dispatch(updateSpecies(updatedSpecies));\n      history.go(0);\n    }\n  };\n\n  // //If description is null or img is null, set it to the previous value\n  // const HandleUpdate = async() => {\n  //   if (Description === \"\" ){\n  //     setNewDescription(family.speciesdesc)\n  //   } else if (Img === \"\") {\n  //     setNewImg(family.speciesimg)\n  //   } else {\n  //     onSubmitUpdate()\n  //     history.push(`/species/${family.speciesname}`)\n  //   }\n  // }\n\n  // //FOR ADDING NEW BIRD TO THE CURRENT SPECIES\n  // const ts = new Date();\n  // const currentDate = ts.toLocaleDateString(\"en-US\") + ' ' + ts.toLocaleTimeString(\"en-US\")\n\n  const [weightInput, setWeight] = useState(0);\n  const [openBird, setOpenBird] = useState(false);\n  const [BirdNameInput, setBirdName] = useState(\"\");\n  const [BirdImageInput, setBirdImage] = useState(\"\");\n  const [BirdSexInput, setSex] = useState(\"\");\n\n  //For the input field for weight\n  const options = [{\n    key: \"integer\",\n    text: \"integer\",\n    value: \"integer\"\n  }, {\n    key: \"decimals\",\n    text: \"decimals\",\n    value: \"decimals\"\n  }];\n  let j, k;\n  let birdList = [];\n  for (k = 0; k < birds.length; k++) {\n    if (birds[k].species === currentspecies_name) {\n      birdList.push(birds[k].name);\n    }\n  }\n  const CheckValid = () => {\n    console.log(\"helo\");\n    for (j = 0; j < birdList.length; j++) {\n      if (birdList[j] === BirdNameInput || BirdNameInput === \"\" || BirdImageInput === \"\" || weightInput === 0 || BirdSexInput.toUpperCase() !== (\"M\" || \"F\")) {\n        setBirdName(\"\");\n        setBirdImage(\"\");\n        setSex(\"\");\n        setWeight(0);\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n  const HandleBird = () => {\n    dispatch(addBird({\n      id: Math.random(),\n      speciesId: currentspecies_id,\n      name: BirdNameInput,\n      sex: BirdSexInput.toUpperCase(),\n      species: currentspecies_name,\n      img: BirdImageInput,\n      weight: weightInput\n    }));\n    setOpenBird(!openBird);\n    history.go(0);\n  };\n  const HandleAddBird = () => {\n    CheckValid() ? HandleBird() : alert(\"ERROR: Either bird name already exists, there are blank input fields or weight input is invalid.\");\n  };\n  return /*#__PURE__*/_jsxDEV(SingleSpeciesPageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n      onClick: handleDeleteClick,\n      children: \"Delete Species\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SingleSpeciesContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SingleSpeciesWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(SingleSpeciesImage, {\n          src: currentspecies_img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SingleSpeciesContent, {\n          children: [/*#__PURE__*/_jsxDEV(SingleSpeciesName, {\n            children: currentspecies_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SingleSpeciesDescription, {\n            children: currentspecies_desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"AddBirdButton\",\n        onClick: () => setOpenBird(!openBird),\n        children: \"Add New Bird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), currentspecies_id !== null && currentspecies_name !== null && currentspecies_img !== null ? /*#__PURE__*/_jsxDEV(Members, {\n        id: currentspecies_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this) : null]\n    }, currentspecies_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"large\",\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      trigger: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"update--showmodal--button\",\n        style: {\n          position: \"absolute\",\n          right: 0,\n          margin: \"130px 100px 130px 130px\",\n          cursor: \"pointer\",\n          zIndex: 999\n        },\n        children: \"Update Species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Update Species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          size: \"large\",\n          src: Img,\n          wrapped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              placeholder: \"Enter description\",\n              defaultValue: currentspecies_desc || Description,\n              onChange: e => setNewDescription(e.target.value),\n              style: {\n                marginBottom: \"30px\",\n                height: \"150px\",\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter Image Address\",\n            defaultValue: currentspecies_img || Img,\n            onChange: e => setNewImg(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Update\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: HandleUpdate,\n          positive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpenBird(false),\n      onOpen: () => setOpenBird(true),\n      open: openBird,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Add New Bird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          size: \"large\",\n          src: BirdImageInput,\n          wrapped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            padding: \"10px\",\n            width: \"100%\",\n            maxWidth: \"350px\",\n            marginLeft: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Name\",\n            type: \"text\",\n            value: BirdNameInput,\n            onChange: e => setBirdName(e.target.value),\n            style: {\n              marginBottom: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Sex\",\n            type: \"text\",\n            value: BirdSexInput,\n            onChange: e => setSex(e.target.value),\n            style: {\n              marginBottom: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Image Address\",\n            type: \"text\",\n            value: BirdImageInput,\n            onChange: e => setBirdImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            label: /*#__PURE__*/_jsxDEV(Dropdown, {\n              defaultValue: \"int\",\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 22\n            }, this),\n            labelPosition: \"right\",\n            placeholder: \"Enter weight\",\n            value: weightInput,\n            onChange: e => setWeight(e.target.value),\n            style: {\n              marginTop: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Add\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: HandleAddBird,\n          positive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(SingleSpeciesPage, \"n3qPJYxB7hs/dGMt5lF1qLWKolY=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n_c = SingleSpeciesPage;\nexport default SingleSpeciesPage;\nvar _c;\n$RefreshReg$(_c, \"SingleSpeciesPage\");","map":{"version":3,"names":["React","useState","useHistory","Members","Nav","Button","Modal","Input","Form","TextArea","Image","Dropdown","SingleSpeciesContainer","SingleSpeciesWrapper","SingleSpeciesContent","SingleSpeciesName","SingleSpeciesImage","SingleSpeciesDescription","SingleSpeciesPageWrapper","DeleteButton","useDispatch","useSelector","deleteSpecies","updateSpecies","addBird","jsxDEV","_jsxDEV","SingleSpeciesPage","match","_s","dispatch","history","species","state","birds","currentspecies","params","name","i","currentspecies_desc","currentspecies_id","currentspecies_img","currentspecies_name","length","id","description","img","open","setOpen","handleDeleteClick","push","Description","setNewDescription","Img","setNewImg","updatedSpecies","HandleUpdate","go","weightInput","setWeight","openBird","setOpenBird","BirdNameInput","setBirdName","BirdImageInput","setBirdImage","BirdSexInput","setSex","options","key","text","value","j","k","birdList","CheckValid","console","log","toUpperCase","HandleBird","Math","random","speciesId","sex","weight","HandleAddBird","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","className","size","onClose","onOpen","trigger","style","position","right","margin","cursor","zIndex","Header","Content","image","wrapped","display","flexDirection","width","placeholder","defaultValue","onChange","e","target","marginBottom","height","Actions","content","labelPosition","icon","positive","padding","maxWidth","marginLeft","type","label","marginTop","_c","$RefreshReg$"],"sources":["/Users/dtzr/Desktop/Projects/birdex-redux-master/src/pages/SingleSpeciesPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Members from \"../components/Members/Members\";\nimport Nav from \"../components/Navbar/Nav\";\nimport {\n  Button,\n  Modal,\n  Input,\n  Form,\n  TextArea,\n  Image,\n  Dropdown,\n} from \"semantic-ui-react\";\n\nimport {\n  SingleSpeciesContainer,\n  SingleSpeciesWrapper,\n  SingleSpeciesContent,\n  SingleSpeciesName,\n  SingleSpeciesImage,\n  SingleSpeciesDescription,\n  SingleSpeciesPageWrapper,\n  DeleteButton,\n} from \"./SingleSpeciesPageStyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteSpecies, updateSpecies } from \"../feature/SpeciesSlice\";\nimport { addBird } from \"../feature/BirdsSlice\";\n\nfunction SingleSpeciesPage({ match }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Pulling state from store\n  const species = useSelector((state) => state.species);\n  const birds = useSelector((state) => state.birds);\n\n  // Retrieving name from URL params\n  const currentspecies = match.params.name;\n\n  let i;\n  let currentspecies_desc,\n    currentspecies_id,\n    currentspecies_img,\n    currentspecies_name;\n\n  // Matching the name on URL with name in the store\n  for (i = 0; i < species.length; i++) {\n    if (species[i].name === currentspecies) {\n      currentspecies_id = species[i].id;\n      currentspecies_desc = species[i].description;\n      currentspecies_img = species[i].img;\n      currentspecies_name = species[i].name;\n    }\n  }\n\n  const [open, setOpen] = useState(false);\n\n  // Delete species\n  const handleDeleteClick = () => {\n    dispatch(deleteSpecies({ name: currentspecies_name }));\n    history.push(\"/birdex-redux\");\n  };\n\n  // Updating species\n  const [Description, setNewDescription] = useState(\"\");\n  const [Img, setNewImg] = useState(\"\");\n\n  const updatedSpecies = {\n    id: currentspecies_id,\n    name: currentspecies_name,\n    description: Description,\n    img: Img,\n  };\n  const HandleUpdate = () => {\n    if (Description === \"\") {\n      setNewDescription(currentspecies_desc);\n    } else if (Img === \"\") {\n      setNewImg(currentspecies_img);\n    } else {\n      dispatch(updateSpecies(updatedSpecies));\n      history.go(0);\n    }\n  };\n\n  // //If description is null or img is null, set it to the previous value\n  // const HandleUpdate = async() => {\n  //   if (Description === \"\" ){\n  //     setNewDescription(family.speciesdesc)\n  //   } else if (Img === \"\") {\n  //     setNewImg(family.speciesimg)\n  //   } else {\n  //     onSubmitUpdate()\n  //     history.push(`/species/${family.speciesname}`)\n  //   }\n  // }\n\n  // //FOR ADDING NEW BIRD TO THE CURRENT SPECIES\n  // const ts = new Date();\n  // const currentDate = ts.toLocaleDateString(\"en-US\") + ' ' + ts.toLocaleTimeString(\"en-US\")\n\n  const [weightInput, setWeight] = useState(0);\n  const [openBird, setOpenBird] = useState(false);\n  const [BirdNameInput, setBirdName] = useState(\"\");\n  const [BirdImageInput, setBirdImage] = useState(\"\");\n  const [BirdSexInput, setSex] = useState(\"\");\n\n  //For the input field for weight\n  const options = [\n    { key: \"integer\", text: \"integer\", value: \"integer\" },\n    { key: \"decimals\", text: \"decimals\", value: \"decimals\" },\n  ];\n\n  let j, k;\n  let birdList = [];\n  for (k = 0; k < birds.length; k++) {\n    if (birds[k].species === currentspecies_name) {\n      birdList.push(birds[k].name);\n    }\n  }\n\n  const CheckValid = () => {\n    console.log(\"helo\");\n    for (j = 0; j < birdList.length; j++) {\n      if (\n        birdList[j] === BirdNameInput ||\n        BirdNameInput === \"\" ||\n        BirdImageInput === \"\" ||\n        weightInput === 0 ||\n        BirdSexInput.toUpperCase() !== (\"M\" || \"F\")\n      ) {\n        setBirdName(\"\");\n        setBirdImage(\"\");\n        setSex(\"\");\n        setWeight(0);\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n\n  const HandleBird = () => {\n    dispatch(\n      addBird({\n        id: Math.random(),\n        speciesId: currentspecies_id,\n        name: BirdNameInput,\n        sex: BirdSexInput.toUpperCase(),\n        species: currentspecies_name,\n        img: BirdImageInput,\n        weight: weightInput,\n      })\n    );\n    setOpenBird(!openBird);\n    history.go(0);\n  };\n\n  const HandleAddBird = () => {\n    CheckValid()\n      ? HandleBird()\n      : alert(\n          \"ERROR: Either bird name already exists, there are blank input fields or weight input is invalid.\"\n        );\n  };\n\n  return (\n    <SingleSpeciesPageWrapper>\n      <Nav />\n      <DeleteButton onClick={handleDeleteClick}>Delete Species</DeleteButton>\n      <SingleSpeciesContainer key={currentspecies_id}>\n        <SingleSpeciesWrapper>\n          <SingleSpeciesImage src={currentspecies_img} />\n          <SingleSpeciesContent>\n            <SingleSpeciesName>{currentspecies_name}</SingleSpeciesName>\n            <SingleSpeciesDescription>\n              {currentspecies_desc}\n            </SingleSpeciesDescription>\n          </SingleSpeciesContent>\n        </SingleSpeciesWrapper>\n        <button\n          className=\"AddBirdButton\"\n          onClick={() => setOpenBird(!openBird)}\n        >\n          Add New Bird\n        </button>\n\n        {currentspecies_id !== null &&\n        currentspecies_name !== null &&\n        currentspecies_img !== null ? (\n          <Members id={currentspecies_id} />\n        ) : null}\n      </SingleSpeciesContainer>\n\n      {/* MODAL TO UPDATE SPECIES*/}\n      <Modal\n        size={\"large\"}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={\n          <Button\n            className=\"update--showmodal--button\"\n            style={{\n              position: \"absolute\",\n              right: 0,\n              margin: \"130px 100px 130px 130px\",\n              cursor: \"pointer\",\n              zIndex: 999,\n            }}\n          >\n            Update Species\n          </Button>\n        }\n      >\n        <Modal.Header>Update Species</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={Img} wrapped />\n          <Modal.Description\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\n          >\n            <Form>\n              <TextArea\n                placeholder=\"Enter description\"\n                defaultValue={currentspecies_desc || Description}\n                onChange={(e) => setNewDescription(e.target.value)}\n                style={{ marginBottom: \"30px\", height: \"150px\", width: \"100%\" }}\n              />\n            </Form>\n            <Input\n              placeholder=\"Enter Image Address\"\n              defaultValue={currentspecies_img || Img}\n              onChange={(e) => setNewImg(e.target.value)}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Update\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={HandleUpdate}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n\n      {/* Modal TO ADD NEW BIRD*/}\n      <Modal\n        onClose={() => setOpenBird(false)}\n        onOpen={() => setOpenBird(true)}\n        open={openBird}\n      >\n        <Modal.Header>Add New Bird</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={BirdImageInput} wrapped />\n          <Modal.Description\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"10px\",\n              width: \"100%\",\n              maxWidth: \"350px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            <Input\n              placeholder=\"Name\"\n              type=\"text\"\n              value={BirdNameInput}\n              onChange={(e) => setBirdName(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Input\n              placeholder=\"Sex\"\n              type=\"text\"\n              value={BirdSexInput}\n              onChange={(e) => setSex(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Input\n              placeholder=\"Image Address\"\n              type=\"text\"\n              value={BirdImageInput}\n              onChange={(e) => setBirdImage(e.target.value)}\n            />\n\n            <Input\n              type=\"number\"\n              label={<Dropdown defaultValue=\"int\" options={options} />}\n              labelPosition=\"right\"\n              placeholder=\"Enter weight\"\n              value={weightInput}\n              onChange={(e) => setWeight(e.target.value)}\n              style={{ marginTop: \"20px\" }}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Add\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={HandleAddBird}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    </SingleSpeciesPageWrapper>\n  );\n}\n\nexport default SingleSpeciesPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}