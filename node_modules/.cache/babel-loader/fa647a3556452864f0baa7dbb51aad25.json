{"ast":null,"code":"import _slicedToArray from\"/Users/dtzr/Documents/GitHub/birdex-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useHistory}from\"react-router\";import Members from\"../components/Members/Members\";import Nav from\"../components/Navbar/Nav\";import{Button,Modal,Input,Form,TextArea,Image,Dropdown}from\"semantic-ui-react\";import{SingleSpeciesContainer,SingleSpeciesWrapper,SingleSpeciesContent,SingleSpeciesName,SingleSpeciesImage,SingleSpeciesDescription,SingleSpeciesPageWrapper,DeleteButton}from\"./SingleSpeciesPageStyle\";import{useDispatch,useSelector}from\"react-redux\";import{deleteSpecies,updateSpecies}from\"../feature/SpeciesSlice\";import{addBird}from\"../feature/BirdsSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SingleSpeciesPage(_ref){var match=_ref.match;var dispatch=useDispatch();var history=useHistory();// Pulling state from store\nvar species=useSelector(function(state){return state.species;});var birds=useSelector(function(state){return state.birds;});// Retrieving name from URL params\nvar currentspecies=match.params.name;var i;var currentspecies_desc,currentspecies_id,currentspecies_img,currentspecies_name;// Matching the name on URL with name in the store\nfor(i=0;i<species.length;i++){if(species[i].name===currentspecies){currentspecies_id=species[i].id;currentspecies_desc=species[i].description;currentspecies_img=species[i].img;currentspecies_name=species[i].name;}}var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];// Delete species\nvar handleDeleteClick=function handleDeleteClick(){dispatch(deleteSpecies({name:currentspecies_name}));history.push(\"/birdex-redux\");};// Updating species\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),Description=_useState4[0],setNewDescription=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),Img=_useState6[0],setNewImg=_useState6[1];var updatedSpecies={id:currentspecies_id,name:currentspecies_name,description:Description,img:Img};var HandleUpdate=function HandleUpdate(){if(Description===\"\"){setNewDescription(currentspecies_desc);}else if(Img===\"\"){setNewImg(currentspecies_img);}else{dispatch(updateSpecies(updatedSpecies));history.go(0);}};// //If description is null or img is null, set it to the previous value\n// const HandleUpdate = async() => {\n//   if (Description === \"\" ){\n//     setNewDescription(family.speciesdesc)\n//   } else if (Img === \"\") {\n//     setNewImg(family.speciesimg)\n//   } else {\n//     onSubmitUpdate()\n//     history.push(`/species/${family.speciesname}`)\n//   }\n// }\n// //FOR ADDING NEW BIRD TO THE CURRENT SPECIES\n// const ts = new Date();\n// const currentDate = ts.toLocaleDateString(\"en-US\") + ' ' + ts.toLocaleTimeString(\"en-US\")\nvar _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),weightInput=_useState8[0],setWeight=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),openBird=_useState10[0],setOpenBird=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),BirdNameInput=_useState12[0],setBirdName=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),BirdImageInput=_useState14[0],setBirdImage=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),BirdSexInput=_useState16[0],setSex=_useState16[1];//For the input field for weight\nvar options=[{key:\"integer\",text:\"integer\",value:\"integer\"},{key:\"decimals\",text:\"decimals\",value:\"decimals\"}];var j,k;var birdList=[];for(k=0;k<birds.length;k++){if(birds[k].species===currentspecies_name){birdList.push(birds[k].name);}}var CheckValid=function CheckValid(){for(j=0;j<birdList.length;j++){if(birdList[j]===BirdNameInput||BirdNameInput===\"\"||BirdImageInput===\"\"||weightInput===0||BirdSexInput.toUpperCase()!==(\"M\"||\"F\")){setBirdName(\"\");setBirdImage(\"\");setSex(\"\");setWeight(0);return false;}else{return true;}}};var HandleBird=function HandleBird(){dispatch(addBird({id:Math.random(),speciesId:currentspecies_id,name:BirdNameInput,sex:BirdSexInput.toUpperCase(),species:currentspecies_name,img:BirdImageInput,weight:weightInput}));setOpenBird(!openBird);history.go(0);};var HandleAddBird=function HandleAddBird(){CheckValid()?HandleBird():alert(\"ERROR: Either bird name already exists, there are blank input fields or weight input is invalid.\");};return/*#__PURE__*/_jsxs(SingleSpeciesPageWrapper,{children:[/*#__PURE__*/_jsx(Nav,{}),/*#__PURE__*/_jsx(DeleteButton,{onClick:handleDeleteClick,children:\"Delete Species\"}),/*#__PURE__*/_jsxs(SingleSpeciesContainer,{children:[/*#__PURE__*/_jsxs(SingleSpeciesWrapper,{children:[/*#__PURE__*/_jsx(SingleSpeciesImage,{src:currentspecies_img}),/*#__PURE__*/_jsxs(SingleSpeciesContent,{children:[/*#__PURE__*/_jsx(SingleSpeciesName,{children:currentspecies_name}),/*#__PURE__*/_jsx(SingleSpeciesDescription,{children:currentspecies_desc})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"AddBirdButton\",onClick:function onClick(){return setOpenBird(!openBird);},children:\"Add New Bird\"}),currentspecies_id!==null&&currentspecies_name!==null&&currentspecies_img!==null?/*#__PURE__*/_jsx(Members,{id:currentspecies_id}):null]},currentspecies_id),/*#__PURE__*/_jsxs(Modal,{size:\"large\",onClose:function onClose(){return setOpen(false);},onOpen:function onOpen(){return setOpen(true);},open:open,trigger:/*#__PURE__*/_jsx(Button,{className:\"update--showmodal--button\",style:{position:\"absolute\",right:0,margin:\"130px 100px 130px 130px\",cursor:\"pointer\",zIndex:999},children:\"Update Species\"}),children:[/*#__PURE__*/_jsx(Modal.Header,{children:\"Update Species\"}),/*#__PURE__*/_jsxs(Modal.Content,{image:true,children:[/*#__PURE__*/_jsx(Image,{size:\"large\",src:Img,wrapped:true}),/*#__PURE__*/_jsxs(Modal.Description,{style:{display:\"flex\",flexDirection:\"column\",width:\"100%\"},children:[/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsx(TextArea,{placeholder:\"Enter description\",defaultValue:currentspecies_desc||Description,onChange:function onChange(e){return setNewDescription(e.target.value);},style:{marginBottom:\"30px\",height:\"150px\",width:\"100%\"}})}),/*#__PURE__*/_jsx(Input,{placeholder:\"Enter Image Address\",defaultValue:currentspecies_img||Img,onChange:function onChange(e){return setNewImg(e.target.value);}})]})]}),/*#__PURE__*/_jsx(Modal.Actions,{children:/*#__PURE__*/_jsx(Button,{content:\"Update\",labelPosition:\"right\",icon:\"checkmark\",onClick:HandleUpdate,positive:true})})]}),/*#__PURE__*/_jsxs(Modal,{onClose:function onClose(){return setOpenBird(false);},onOpen:function onOpen(){return setOpenBird(true);},open:openBird,children:[/*#__PURE__*/_jsx(Modal.Header,{children:\"Add New Bird\"}),/*#__PURE__*/_jsxs(Modal.Content,{image:true,children:[/*#__PURE__*/_jsx(Image,{size:\"large\",src:BirdImageInput,wrapped:true}),/*#__PURE__*/_jsxs(Modal.Description,{style:{display:\"flex\",flexDirection:\"column\",padding:\"10px\",width:\"100%\",maxWidth:\"350px\",marginLeft:\"20px\"},children:[/*#__PURE__*/_jsx(Input,{placeholder:\"Name\",type:\"text\",value:BirdNameInput,onChange:function onChange(e){return setBirdName(e.target.value);},style:{marginBottom:\"20px\"}}),/*#__PURE__*/_jsx(Input,{placeholder:\"Sex\",type:\"text\",value:BirdSexInput,onChange:function onChange(e){return setSex(e.target.value);},style:{marginBottom:\"20px\"}}),/*#__PURE__*/_jsx(Input,{placeholder:\"Image Address\",type:\"text\",value:BirdImageInput,onChange:function onChange(e){return setBirdImage(e.target.value);}}),/*#__PURE__*/_jsx(Input,{type:\"number\",label:/*#__PURE__*/_jsx(Dropdown,{defaultValue:\"int\",options:options}),labelPosition:\"right\",placeholder:\"Enter weight\",value:weightInput,onChange:function onChange(e){return setWeight(e.target.value);},style:{marginTop:\"20px\"}})]})]}),/*#__PURE__*/_jsx(Modal.Actions,{children:/*#__PURE__*/_jsx(Button,{content:\"Add\",labelPosition:\"right\",icon:\"checkmark\",onClick:HandleAddBird,positive:true})})]})]});}export default SingleSpeciesPage;","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleSpeciesPage.js"],"names":["React","useState","useHistory","Members","Nav","Button","Modal","Input","Form","TextArea","Image","Dropdown","SingleSpeciesContainer","SingleSpeciesWrapper","SingleSpeciesContent","SingleSpeciesName","SingleSpeciesImage","SingleSpeciesDescription","SingleSpeciesPageWrapper","DeleteButton","useDispatch","useSelector","deleteSpecies","updateSpecies","addBird","SingleSpeciesPage","match","dispatch","history","species","state","birds","currentspecies","params","name","i","currentspecies_desc","currentspecies_id","currentspecies_img","currentspecies_name","length","id","description","img","open","setOpen","handleDeleteClick","push","Description","setNewDescription","Img","setNewImg","updatedSpecies","HandleUpdate","go","weightInput","setWeight","openBird","setOpenBird","BirdNameInput","setBirdName","BirdImageInput","setBirdImage","BirdSexInput","setSex","options","key","text","value","j","k","birdList","CheckValid","toUpperCase","HandleBird","Math","random","speciesId","sex","weight","HandleAddBird","alert","position","right","margin","cursor","zIndex","display","flexDirection","width","e","target","marginBottom","height","padding","maxWidth","marginLeft","marginTop"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,0BAAhB,CACA,OACEC,MADF,CAEEC,KAFF,CAGEC,KAHF,CAIEC,IAJF,CAKEC,QALF,CAMEC,KANF,CAOEC,QAPF,KAQO,mBARP,CAUA,OACEC,sBADF,CAEEC,oBAFF,CAGEC,oBAHF,CAIEC,iBAJF,CAKEC,kBALF,CAMEC,wBANF,CAOEC,wBAPF,CAQEC,YARF,KASO,0BATP,CAUA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,aAAT,CAAwBC,aAAxB,KAA6C,yBAA7C,CACA,OAASC,OAAT,KAAwB,uBAAxB,C,wFAEA,QAASC,CAAAA,iBAAT,MAAsC,IAATC,CAAAA,KAAS,MAATA,KAAS,CACpC,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,OAAO,CAAG1B,UAAU,EAA1B,CAEA;AACA,GAAM2B,CAAAA,OAAO,CAAGR,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACD,OAAjB,EAAD,CAA3B,CACA,GAAME,CAAAA,KAAK,CAAGV,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAjB,EAAD,CAAzB,CAEA;AACA,GAAMC,CAAAA,cAAc,CAAGN,KAAK,CAACO,MAAN,CAAaC,IAApC,CAEA,GAAIC,CAAAA,CAAJ,CACA,GAAIC,CAAAA,mBAAJ,CACEC,iBADF,CAEEC,kBAFF,CAGEC,mBAHF,CAKA;AACA,IAAKJ,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGN,OAAO,CAACW,MAAxB,CAAgCL,CAAC,EAAjC,CAAqC,CACnC,GAAIN,OAAO,CAACM,CAAD,CAAP,CAAWD,IAAX,GAAoBF,cAAxB,CAAwC,CACtCK,iBAAiB,CAAGR,OAAO,CAACM,CAAD,CAAP,CAAWM,EAA/B,CACAL,mBAAmB,CAAGP,OAAO,CAACM,CAAD,CAAP,CAAWO,WAAjC,CACAJ,kBAAkB,CAAGT,OAAO,CAACM,CAAD,CAAP,CAAWQ,GAAhC,CACAJ,mBAAmB,CAAGV,OAAO,CAACM,CAAD,CAAP,CAAWD,IAAjC,CACD,CACF,CAED,cAAwBjC,QAAQ,CAAC,KAAD,CAAhC,wCAAO2C,IAAP,eAAaC,OAAb,eAEA;AACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BnB,QAAQ,CAACL,aAAa,CAAC,CAAEY,IAAI,CAAEK,mBAAR,CAAD,CAAd,CAAR,CACAX,OAAO,CAACmB,IAAR,CAAa,eAAb,EACD,CAHD,CAKA;AACA,eAAyC9C,QAAQ,CAAC,EAAD,CAAjD,yCAAO+C,WAAP,eAAoBC,iBAApB,eACA,eAAyBhD,QAAQ,CAAC,EAAD,CAAjC,yCAAOiD,GAAP,eAAYC,SAAZ,eAEA,GAAMC,CAAAA,cAAc,CAAG,CACrBX,EAAE,CAAEJ,iBADiB,CAErBH,IAAI,CAAEK,mBAFe,CAGrBG,WAAW,CAAEM,WAHQ,CAIrBL,GAAG,CAAEO,GAJgB,CAAvB,CAMA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAIL,WAAW,GAAK,EAApB,CAAwB,CACtBC,iBAAiB,CAACb,mBAAD,CAAjB,CACD,CAFD,IAEO,IAAIc,GAAG,GAAK,EAAZ,CAAgB,CACrBC,SAAS,CAACb,kBAAD,CAAT,CACD,CAFM,IAEA,CACLX,QAAQ,CAACJ,aAAa,CAAC6B,cAAD,CAAd,CAAR,CACAxB,OAAO,CAAC0B,EAAR,CAAW,CAAX,EACD,CACF,CATD,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,eAAiCrD,QAAQ,CAAC,CAAD,CAAzC,yCAAOsD,WAAP,eAAoBC,SAApB,eACA,eAAgCvD,QAAQ,CAAC,KAAD,CAAxC,0CAAOwD,QAAP,gBAAiBC,WAAjB,gBACA,gBAAqCzD,QAAQ,CAAC,EAAD,CAA7C,2CAAO0D,aAAP,gBAAsBC,WAAtB,gBACA,gBAAuC3D,QAAQ,CAAC,EAAD,CAA/C,2CAAO4D,cAAP,gBAAuBC,YAAvB,gBACA,gBAA+B7D,QAAQ,CAAC,EAAD,CAAvC,2CAAO8D,YAAP,gBAAqBC,MAArB,gBAEA;AACA,GAAMC,CAAAA,OAAO,CAAG,CACd,CAAEC,GAAG,CAAE,SAAP,CAAkBC,IAAI,CAAE,SAAxB,CAAmCC,KAAK,CAAE,SAA1C,CADc,CAEd,CAAEF,GAAG,CAAE,UAAP,CAAmBC,IAAI,CAAE,UAAzB,CAAqCC,KAAK,CAAE,UAA5C,CAFc,CAAhB,CAKA,GAAIC,CAAAA,CAAJ,CAAOC,CAAP,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,IAAKD,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGvC,KAAK,CAACS,MAAtB,CAA8B8B,CAAC,EAA/B,CAAmC,CACjC,GAAIvC,KAAK,CAACuC,CAAD,CAAL,CAASzC,OAAT,GAAqBU,mBAAzB,CAA8C,CAC5CgC,QAAQ,CAACxB,IAAT,CAAchB,KAAK,CAACuC,CAAD,CAAL,CAASpC,IAAvB,EACD,CACF,CAED,GAAMsC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,IAAKH,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGE,QAAQ,CAAC/B,MAAzB,CAAiC6B,CAAC,EAAlC,CAAsC,CACpC,GACEE,QAAQ,CAACF,CAAD,CAAR,GAAgBV,aAAhB,EACAA,aAAa,GAAK,EADlB,EAEAE,cAAc,GAAK,EAFnB,EAGAN,WAAW,GAAK,CAHhB,EAIAQ,YAAY,CAACU,WAAb,MAAgC,KAAO,GAAvC,CALF,CAME,CACAb,WAAW,CAAC,EAAD,CAAX,CACAE,YAAY,CAAC,EAAD,CAAZ,CACAE,MAAM,CAAC,EAAD,CAAN,CACAR,SAAS,CAAC,CAAD,CAAT,CACA,MAAO,MAAP,CACD,CAZD,IAYO,CACL,MAAO,KAAP,CACD,CACF,CACF,CAlBD,CAoBA,GAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB/C,QAAQ,CACNH,OAAO,CAAC,CACNiB,EAAE,CAAEkC,IAAI,CAACC,MAAL,EADE,CAENC,SAAS,CAAExC,iBAFL,CAGNH,IAAI,CAAEyB,aAHA,CAINmB,GAAG,CAAEf,YAAY,CAACU,WAAb,EAJC,CAKN5C,OAAO,CAAEU,mBALH,CAMNI,GAAG,CAAEkB,cANC,CAONkB,MAAM,CAAExB,WAPF,CAAD,CADD,CAAR,CAWAG,WAAW,CAAC,CAACD,QAAF,CAAX,CACA7B,OAAO,CAAC0B,EAAR,CAAW,CAAX,EACD,CAdD,CAgBA,GAAM0B,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BR,UAAU,GACNE,UAAU,EADJ,CAENO,KAAK,CACH,kGADG,CAFT,CAKD,CAND,CAQA,mBACE,MAAC,wBAAD,yBACE,KAAC,GAAD,IADF,cAEE,KAAC,YAAD,EAAc,OAAO,CAAEnC,iBAAvB,4BAFF,cAGE,MAAC,sBAAD,yBACE,MAAC,oBAAD,yBACE,KAAC,kBAAD,EAAoB,GAAG,CAAER,kBAAzB,EADF,cAEE,MAAC,oBAAD,yBACE,KAAC,iBAAD,WAAoBC,mBAApB,EADF,cAEE,KAAC,wBAAD,WACGH,mBADH,EAFF,GAFF,GADF,cAUE,eACE,SAAS,CAAC,eADZ,CAEE,OAAO,CAAE,yBAAMsB,CAAAA,WAAW,CAAC,CAACD,QAAF,CAAjB,EAFX,0BAVF,CAiBGpB,iBAAiB,GAAK,IAAtB,EACDE,mBAAmB,GAAK,IADvB,EAEDD,kBAAkB,GAAK,IAFtB,cAGC,KAAC,OAAD,EAAS,EAAE,CAAED,iBAAb,EAHD,CAIG,IArBN,GAA6BA,iBAA7B,CAHF,cA4BE,MAAC,KAAD,EACE,IAAI,CAAE,OADR,CAEE,OAAO,CAAE,yBAAMQ,CAAAA,OAAO,CAAC,KAAD,CAAb,EAFX,CAGE,MAAM,CAAE,wBAAMA,CAAAA,OAAO,CAAC,IAAD,CAAb,EAHV,CAIE,IAAI,CAAED,IAJR,CAKE,OAAO,cACL,KAAC,MAAD,EACE,SAAS,CAAC,2BADZ,CAEE,KAAK,CAAE,CACLsC,QAAQ,CAAE,UADL,CAELC,KAAK,CAAE,CAFF,CAGLC,MAAM,CAAE,yBAHH,CAILC,MAAM,CAAE,SAJH,CAKLC,MAAM,CAAE,GALH,CAFT,4BANJ,wBAoBE,KAAC,KAAD,CAAO,MAAP,6BApBF,cAqBE,MAAC,KAAD,CAAO,OAAP,EAAe,KAAK,KAApB,wBACE,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,GAAG,CAAEpC,GAAzB,CAA8B,OAAO,KAArC,EADF,cAEE,MAAC,KAAD,CAAO,WAAP,EACE,KAAK,CAAE,CAAEqC,OAAO,CAAE,MAAX,CAAmBC,aAAa,CAAE,QAAlC,CAA4CC,KAAK,CAAE,MAAnD,CADT,wBAGE,KAAC,IAAD,wBACE,KAAC,QAAD,EACE,WAAW,CAAC,mBADd,CAEE,YAAY,CAAErD,mBAAmB,EAAIY,WAFvC,CAGE,QAAQ,CAAE,kBAAC0C,CAAD,QAAOzC,CAAAA,iBAAiB,CAACyC,CAAC,CAACC,MAAF,CAASvB,KAAV,CAAxB,EAHZ,CAIE,KAAK,CAAE,CAAEwB,YAAY,CAAE,MAAhB,CAAwBC,MAAM,CAAE,OAAhC,CAAyCJ,KAAK,CAAE,MAAhD,CAJT,EADF,EAHF,cAWE,KAAC,KAAD,EACE,WAAW,CAAC,qBADd,CAEE,YAAY,CAAEnD,kBAAkB,EAAIY,GAFtC,CAGE,QAAQ,CAAE,kBAACwC,CAAD,QAAOvC,CAAAA,SAAS,CAACuC,CAAC,CAACC,MAAF,CAASvB,KAAV,CAAhB,EAHZ,EAXF,GAFF,GArBF,cAyCE,KAAC,KAAD,CAAO,OAAP,wBACE,KAAC,MAAD,EACE,OAAO,CAAC,QADV,CAEE,aAAa,CAAC,OAFhB,CAGE,IAAI,CAAC,WAHP,CAIE,OAAO,CAAEf,YAJX,CAKE,QAAQ,KALV,EADF,EAzCF,GA5BF,cAiFE,MAAC,KAAD,EACE,OAAO,CAAE,yBAAMK,CAAAA,WAAW,CAAC,KAAD,CAAjB,EADX,CAEE,MAAM,CAAE,wBAAMA,CAAAA,WAAW,CAAC,IAAD,CAAjB,EAFV,CAGE,IAAI,CAAED,QAHR,wBAKE,KAAC,KAAD,CAAO,MAAP,2BALF,cAME,MAAC,KAAD,CAAO,OAAP,EAAe,KAAK,KAApB,wBACE,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,GAAG,CAAEI,cAAzB,CAAyC,OAAO,KAAhD,EADF,cAEE,MAAC,KAAD,CAAO,WAAP,EACE,KAAK,CAAE,CACL0B,OAAO,CAAE,MADJ,CAELC,aAAa,CAAE,QAFV,CAGLM,OAAO,CAAE,MAHJ,CAILL,KAAK,CAAE,MAJF,CAKLM,QAAQ,CAAE,OALL,CAMLC,UAAU,CAAE,MANP,CADT,wBAUE,KAAC,KAAD,EACE,WAAW,CAAC,MADd,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAErC,aAHT,CAIE,QAAQ,CAAE,kBAAC+B,CAAD,QAAO9B,CAAAA,WAAW,CAAC8B,CAAC,CAACC,MAAF,CAASvB,KAAV,CAAlB,EAJZ,CAKE,KAAK,CAAE,CAAEwB,YAAY,CAAE,MAAhB,CALT,EAVF,cAkBE,KAAC,KAAD,EACE,WAAW,CAAC,KADd,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAE7B,YAHT,CAIE,QAAQ,CAAE,kBAAC2B,CAAD,QAAO1B,CAAAA,MAAM,CAAC0B,CAAC,CAACC,MAAF,CAASvB,KAAV,CAAb,EAJZ,CAKE,KAAK,CAAE,CAAEwB,YAAY,CAAE,MAAhB,CALT,EAlBF,cA0BE,KAAC,KAAD,EACE,WAAW,CAAC,eADd,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAE/B,cAHT,CAIE,QAAQ,CAAE,kBAAC6B,CAAD,QAAO5B,CAAAA,YAAY,CAAC4B,CAAC,CAACC,MAAF,CAASvB,KAAV,CAAnB,EAJZ,EA1BF,cAiCE,KAAC,KAAD,EACE,IAAI,CAAC,QADP,CAEE,KAAK,cAAE,KAAC,QAAD,EAAU,YAAY,CAAC,KAAvB,CAA6B,OAAO,CAAEH,OAAtC,EAFT,CAGE,aAAa,CAAC,OAHhB,CAIE,WAAW,CAAC,cAJd,CAKE,KAAK,CAAEV,WALT,CAME,QAAQ,CAAE,kBAACmC,CAAD,QAAOlC,CAAAA,SAAS,CAACkC,CAAC,CAACC,MAAF,CAASvB,KAAV,CAAhB,EANZ,CAOE,KAAK,CAAE,CAAE6B,SAAS,CAAE,MAAb,CAPT,EAjCF,GAFF,GANF,cAoDE,KAAC,KAAD,CAAO,OAAP,wBACE,KAAC,MAAD,EACE,OAAO,CAAC,KADV,CAEE,aAAa,CAAC,OAFhB,CAGE,IAAI,CAAC,WAHP,CAIE,OAAO,CAAEjB,aAJX,CAKE,QAAQ,KALV,EADF,EApDF,GAjFF,GADF,CAkJD,CAED,cAAevD,CAAAA,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Members from \"../components/Members/Members\";\nimport Nav from \"../components/Navbar/Nav\";\nimport {\n  Button,\n  Modal,\n  Input,\n  Form,\n  TextArea,\n  Image,\n  Dropdown,\n} from \"semantic-ui-react\";\n\nimport {\n  SingleSpeciesContainer,\n  SingleSpeciesWrapper,\n  SingleSpeciesContent,\n  SingleSpeciesName,\n  SingleSpeciesImage,\n  SingleSpeciesDescription,\n  SingleSpeciesPageWrapper,\n  DeleteButton,\n} from \"./SingleSpeciesPageStyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteSpecies, updateSpecies } from \"../feature/SpeciesSlice\";\nimport { addBird } from \"../feature/BirdsSlice\";\n\nfunction SingleSpeciesPage({ match }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Pulling state from store\n  const species = useSelector((state) => state.species);\n  const birds = useSelector((state) => state.birds);\n\n  // Retrieving name from URL params\n  const currentspecies = match.params.name;\n\n  let i;\n  let currentspecies_desc,\n    currentspecies_id,\n    currentspecies_img,\n    currentspecies_name;\n\n  // Matching the name on URL with name in the store\n  for (i = 0; i < species.length; i++) {\n    if (species[i].name === currentspecies) {\n      currentspecies_id = species[i].id;\n      currentspecies_desc = species[i].description;\n      currentspecies_img = species[i].img;\n      currentspecies_name = species[i].name;\n    }\n  }\n\n  const [open, setOpen] = useState(false);\n\n  // Delete species\n  const handleDeleteClick = () => {\n    dispatch(deleteSpecies({ name: currentspecies_name }));\n    history.push(\"/birdex-redux\");\n  };\n\n  // Updating species\n  const [Description, setNewDescription] = useState(\"\");\n  const [Img, setNewImg] = useState(\"\");\n\n  const updatedSpecies = {\n    id: currentspecies_id,\n    name: currentspecies_name,\n    description: Description,\n    img: Img,\n  };\n  const HandleUpdate = () => {\n    if (Description === \"\") {\n      setNewDescription(currentspecies_desc);\n    } else if (Img === \"\") {\n      setNewImg(currentspecies_img);\n    } else {\n      dispatch(updateSpecies(updatedSpecies));\n      history.go(0);\n    }\n  };\n\n  // //If description is null or img is null, set it to the previous value\n  // const HandleUpdate = async() => {\n  //   if (Description === \"\" ){\n  //     setNewDescription(family.speciesdesc)\n  //   } else if (Img === \"\") {\n  //     setNewImg(family.speciesimg)\n  //   } else {\n  //     onSubmitUpdate()\n  //     history.push(`/species/${family.speciesname}`)\n  //   }\n  // }\n\n  // //FOR ADDING NEW BIRD TO THE CURRENT SPECIES\n  // const ts = new Date();\n  // const currentDate = ts.toLocaleDateString(\"en-US\") + ' ' + ts.toLocaleTimeString(\"en-US\")\n\n  const [weightInput, setWeight] = useState(0);\n  const [openBird, setOpenBird] = useState(false);\n  const [BirdNameInput, setBirdName] = useState(\"\");\n  const [BirdImageInput, setBirdImage] = useState(\"\");\n  const [BirdSexInput, setSex] = useState(\"\");\n\n  //For the input field for weight\n  const options = [\n    { key: \"integer\", text: \"integer\", value: \"integer\" },\n    { key: \"decimals\", text: \"decimals\", value: \"decimals\" },\n  ];\n\n  let j, k;\n  let birdList = [];\n  for (k = 0; k < birds.length; k++) {\n    if (birds[k].species === currentspecies_name) {\n      birdList.push(birds[k].name);\n    }\n  }\n\n  const CheckValid = () => {\n    for (j = 0; j < birdList.length; j++) {\n      if (\n        birdList[j] === BirdNameInput ||\n        BirdNameInput === \"\" ||\n        BirdImageInput === \"\" ||\n        weightInput === 0 ||\n        BirdSexInput.toUpperCase() !== (\"M\" || \"F\")\n      ) {\n        setBirdName(\"\");\n        setBirdImage(\"\");\n        setSex(\"\");\n        setWeight(0);\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n\n  const HandleBird = () => {\n    dispatch(\n      addBird({\n        id: Math.random(),\n        speciesId: currentspecies_id,\n        name: BirdNameInput,\n        sex: BirdSexInput.toUpperCase(),\n        species: currentspecies_name,\n        img: BirdImageInput,\n        weight: weightInput,\n      })\n    );\n    setOpenBird(!openBird);\n    history.go(0);\n  };\n\n  const HandleAddBird = () => {\n    CheckValid()\n      ? HandleBird()\n      : alert(\n          \"ERROR: Either bird name already exists, there are blank input fields or weight input is invalid.\"\n        );\n  };\n\n  return (\n    <SingleSpeciesPageWrapper>\n      <Nav />\n      <DeleteButton onClick={handleDeleteClick}>Delete Species</DeleteButton>\n      <SingleSpeciesContainer key={currentspecies_id}>\n        <SingleSpeciesWrapper>\n          <SingleSpeciesImage src={currentspecies_img} />\n          <SingleSpeciesContent>\n            <SingleSpeciesName>{currentspecies_name}</SingleSpeciesName>\n            <SingleSpeciesDescription>\n              {currentspecies_desc}\n            </SingleSpeciesDescription>\n          </SingleSpeciesContent>\n        </SingleSpeciesWrapper>\n        <button\n          className=\"AddBirdButton\"\n          onClick={() => setOpenBird(!openBird)}\n        >\n          Add New Bird\n        </button>\n\n        {currentspecies_id !== null &&\n        currentspecies_name !== null &&\n        currentspecies_img !== null ? (\n          <Members id={currentspecies_id} />\n        ) : null}\n      </SingleSpeciesContainer>\n\n      {/* MODAL TO UPDATE SPECIES*/}\n      <Modal\n        size={\"large\"}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={\n          <Button\n            className=\"update--showmodal--button\"\n            style={{\n              position: \"absolute\",\n              right: 0,\n              margin: \"130px 100px 130px 130px\",\n              cursor: \"pointer\",\n              zIndex: 999,\n            }}\n          >\n            Update Species\n          </Button>\n        }\n      >\n        <Modal.Header>Update Species</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={Img} wrapped />\n          <Modal.Description\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\n          >\n            <Form>\n              <TextArea\n                placeholder=\"Enter description\"\n                defaultValue={currentspecies_desc || Description}\n                onChange={(e) => setNewDescription(e.target.value)}\n                style={{ marginBottom: \"30px\", height: \"150px\", width: \"100%\" }}\n              />\n            </Form>\n            <Input\n              placeholder=\"Enter Image Address\"\n              defaultValue={currentspecies_img || Img}\n              onChange={(e) => setNewImg(e.target.value)}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Update\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={HandleUpdate}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n\n      {/* Modal TO ADD NEW BIRD*/}\n      <Modal\n        onClose={() => setOpenBird(false)}\n        onOpen={() => setOpenBird(true)}\n        open={openBird}\n      >\n        <Modal.Header>Add New Bird</Modal.Header>\n        <Modal.Content image>\n          <Image size=\"large\" src={BirdImageInput} wrapped />\n          <Modal.Description\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              padding: \"10px\",\n              width: \"100%\",\n              maxWidth: \"350px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            <Input\n              placeholder=\"Name\"\n              type=\"text\"\n              value={BirdNameInput}\n              onChange={(e) => setBirdName(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Input\n              placeholder=\"Sex\"\n              type=\"text\"\n              value={BirdSexInput}\n              onChange={(e) => setSex(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n\n            <Input\n              placeholder=\"Image Address\"\n              type=\"text\"\n              value={BirdImageInput}\n              onChange={(e) => setBirdImage(e.target.value)}\n            />\n\n            <Input\n              type=\"number\"\n              label={<Dropdown defaultValue=\"int\" options={options} />}\n              labelPosition=\"right\"\n              placeholder=\"Enter weight\"\n              value={weightInput}\n              onChange={(e) => setWeight(e.target.value)}\n              style={{ marginTop: \"20px\" }}\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Add\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={HandleAddBird}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    </SingleSpeciesPageWrapper>\n  );\n}\n\nexport default SingleSpeciesPage;\n"]},"metadata":{},"sourceType":"module"}