{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleBird.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Nav from \"../components/Navbar/Nav\";\nimport * as d3 from \"d3\";\nimport { SingleBirdPageWrapper, SingleBirdContainer, SingleBirdWrapper, SingleBirdContent, SingleBirdName, SingleBirdSpecies, SingleBirdWeight, SingleBirdSex, ImageWrapper, SingleBirdImage, Backbutton, ViewEntries, DeleteBird, AnalysisContainer, VisualContainer, StatsContainer, StatsWrapper, Statsdetail, ChartContainer, ChartChangeH1Bar, ChartChangeH1Line } from \"./SingleBirdStyle\";\nimport BarChart from \"../components/Charts/BarChart\";\nimport LineChart from \"../components/Charts/LineChart\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deletebird } from \"../feature/BirdsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SingleBird({\n  match\n}) {\n  _s();\n\n  const birds = useSelector(state => state.birds);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let i;\n  let currentbird_img, currentbird_name, currentbird_id, currentbird_weights, currentbird_sex, currentbird_species, currentbird_speciesid;\n  console.log(birds);\n  console.log(match.params);\n\n  for (i = 0; i < birds.length; i++) {\n    if (birds[i].name === match.params.name && birds[i].id === parseInt(match.params.birdsid)) {\n      currentbird_img = birds[i].img;\n      currentbird_name = birds[i].name;\n      currentbird_id = birds[i].id;\n      currentbird_weights = birds[i].weights;\n      currentbird_sex = birds[i].sex;\n      currentbird_species = birds[i].species;\n      currentbird_speciesid = birds[i].species_id;\n    }\n  } // DELETING BIRD (FROM BIRDSDATA AND ENTRIES)\n\n\n  const deleteBird = () => {\n    dispatch(deletebird({\n      id: currentbird_id\n    }));\n    history.push(`/species/${currentbird_species}`);\n  }; // calculating the weights stats\n  // const weights = Object.values(\n  //   currentbird_weights.map((weights) => weights.weight)\n  // );\n\n\n  const weights = 2;\n  const stats = {\n    avg_weight: parseFloat(d3.mean(weights)).toFixed(2),\n    min_weights: d3.min(weights),\n    max_weights: d3.max(weights),\n    median_weights: d3.median(weights),\n    weights_dev: parseFloat(d3.deviation(weights)).toFixed(2)\n  }; // For the bar and line chart\n\n  const [LineActive, setLineActive] = useState(false);\n  const bardetails = [];\n  let j;\n\n  for (j = 0; j < currentbird_weights.length; j++) {\n    bardetails.push({\n      created_at: currentbird_weights[j].created_at,\n      weight: currentbird_weights[j].weight\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(SingleBirdPageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteBird, {\n      onClick: deleteBird,\n      children: \" Delete Bird \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SingleBirdContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SingleBirdWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ImageWrapper, {\n          children: /*#__PURE__*/_jsxDEV(SingleBirdImage, {\n            src: currentbird_img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SingleBirdContent, {\n          children: [/*#__PURE__*/_jsxDEV(SingleBirdName, {\n            children: currentbird_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SingleBirdSpecies, {\n            children: [\"Species: \", currentbird_species]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SingleBirdSex, {\n            children: [\"Sex: \", currentbird_sex]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SingleBirdWeight, {\n            children: [\"Average Weight: \", stats.avg_weight, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnalysisContainer, {\n        children: [/*#__PURE__*/_jsxDEV(StatsContainer, {\n          children: /*#__PURE__*/_jsxDEV(StatsWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Statsdetail, {\n              children: [\"Average Weight: \", stats.avg_weight, \"g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statsdetail, {\n              children: [\"Minimum Weight: \", stats.min_weights, \"g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statsdetail, {\n              children: [\"Maximum Weight: \", stats.max_weights, \"g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statsdetail, {\n              children: [\"Median Weight: \", stats.median_weights, \"g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statsdetail, {\n              children: [\"Weight Deviation: \", stats.weights_dev, \"g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VisualContainer, {\n          children: [/*#__PURE__*/_jsxDEV(ChartContainer, {\n            children: LineActive ? /*#__PURE__*/_jsxDEV(LineChart, {\n              data: bardetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(BarChart, {\n              data: bardetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), LineActive ? /*#__PURE__*/_jsxDEV(ChartChangeH1Bar, {\n            LineActive: true,\n            onClick: () => setLineActive(false),\n            children: \"Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ChartChangeH1Line, {\n            LineActive: true,\n            onClick: () => setLineActive(true),\n            children: \"Line Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, currentbird_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backbutton, {\n      onClick: () => history.goBack(),\n      children: \" Back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewEntries, {\n      to: `/birds/${currentbird_name}/${currentbird_id}/${currentbird_species}/entries`,\n      children: \"View Entries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleBird, \"W9+tm/6nrczhjyhKmoUSZxFOrIU=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = SingleBird;\nexport default SingleBird;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleBird\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/birdex-redux/src/pages/SingleBird.js"],"names":["React","useState","useHistory","Nav","d3","SingleBirdPageWrapper","SingleBirdContainer","SingleBirdWrapper","SingleBirdContent","SingleBirdName","SingleBirdSpecies","SingleBirdWeight","SingleBirdSex","ImageWrapper","SingleBirdImage","Backbutton","ViewEntries","DeleteBird","AnalysisContainer","VisualContainer","StatsContainer","StatsWrapper","Statsdetail","ChartContainer","ChartChangeH1Bar","ChartChangeH1Line","BarChart","LineChart","useDispatch","useSelector","deletebird","SingleBird","match","birds","state","history","dispatch","i","currentbird_img","currentbird_name","currentbird_id","currentbird_weights","currentbird_sex","currentbird_species","currentbird_speciesid","console","log","params","length","name","id","parseInt","birdsid","img","weights","sex","species","species_id","deleteBird","push","stats","avg_weight","parseFloat","mean","toFixed","min_weights","min","max_weights","max","median_weights","median","weights_dev","deviation","LineActive","setLineActive","bardetails","j","created_at","weight","goBack"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Nav from \"../components/Navbar/Nav\";\nimport * as d3 from \"d3\";\nimport {\n  SingleBirdPageWrapper,\n  SingleBirdContainer,\n  SingleBirdWrapper,\n  SingleBirdContent,\n  SingleBirdName,\n  SingleBirdSpecies,\n  SingleBirdWeight,\n  SingleBirdSex,\n  ImageWrapper,\n  SingleBirdImage,\n  Backbutton,\n  ViewEntries,\n  DeleteBird,\n  AnalysisContainer,\n  VisualContainer,\n  StatsContainer,\n  StatsWrapper,\n  Statsdetail,\n  ChartContainer,\n  ChartChangeH1Bar,\n  ChartChangeH1Line,\n} from \"./SingleBirdStyle\";\nimport BarChart from \"../components/Charts/BarChart\";\nimport LineChart from \"../components/Charts/LineChart\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deletebird } from \"../feature/BirdsSlice\";\n\nfunction SingleBird({ match }) {\n  const birds = useSelector((state) => state.birds);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let i;\n  let currentbird_img,\n    currentbird_name,\n    currentbird_id,\n    currentbird_weights,\n    currentbird_sex,\n    currentbird_species,\n    currentbird_speciesid;\n\n  console.log(birds);\n  console.log(match.params);\n\n  for (i = 0; i < birds.length; i++) {\n    if (\n      birds[i].name === match.params.name &&\n      birds[i].id === parseInt(match.params.birdsid)\n    ) {\n      currentbird_img = birds[i].img;\n      currentbird_name = birds[i].name;\n      currentbird_id = birds[i].id;\n      currentbird_weights = birds[i].weights;\n      currentbird_sex = birds[i].sex;\n      currentbird_species = birds[i].species;\n      currentbird_speciesid = birds[i].species_id;\n    }\n  }\n\n  // DELETING BIRD (FROM BIRDSDATA AND ENTRIES)\n  const deleteBird = () => {\n    dispatch(\n      deletebird({\n        id: currentbird_id,\n      })\n    );\n    history.push(`/species/${currentbird_species}`);\n  };\n\n  // calculating the weights stats\n  // const weights = Object.values(\n  //   currentbird_weights.map((weights) => weights.weight)\n  // );\n  const weights = 2;\n\n  const stats = {\n    avg_weight: parseFloat(d3.mean(weights)).toFixed(2),\n    min_weights: d3.min(weights),\n    max_weights: d3.max(weights),\n    median_weights: d3.median(weights),\n    weights_dev: parseFloat(d3.deviation(weights)).toFixed(2),\n  };\n\n  // For the bar and line chart\n  const [LineActive, setLineActive] = useState(false);\n  const bardetails = [];\n  let j;\n  for (j = 0; j < currentbird_weights.length; j++) {\n    bardetails.push({\n      created_at: currentbird_weights[j].created_at,\n      weight: currentbird_weights[j].weight,\n    });\n  }\n\n  return (\n    <SingleBirdPageWrapper>\n      <Nav />\n\n      <DeleteBird onClick={deleteBird}> Delete Bird </DeleteBird>\n\n      <SingleBirdContainer key={currentbird_id}>\n        <SingleBirdWrapper>\n          <ImageWrapper>\n            <SingleBirdImage src={currentbird_img} />\n          </ImageWrapper>\n          <SingleBirdContent>\n            <SingleBirdName>{currentbird_name}</SingleBirdName>\n            <SingleBirdSpecies>\n              Species: {currentbird_species}\n            </SingleBirdSpecies>\n            <SingleBirdSex>Sex: {currentbird_sex}</SingleBirdSex>\n            <SingleBirdWeight>\n              {/* Will be using calculated average weight */}\n              Average Weight: {stats.avg_weight}g\n            </SingleBirdWeight>\n          </SingleBirdContent>\n        </SingleBirdWrapper>\n\n        <AnalysisContainer>\n          <StatsContainer>\n            <StatsWrapper>\n              <Statsdetail>Average Weight: {stats.avg_weight}g</Statsdetail>\n              <Statsdetail>Minimum Weight: {stats.min_weights}g</Statsdetail>\n              <Statsdetail>Maximum Weight: {stats.max_weights}g</Statsdetail>\n              <Statsdetail>Median Weight: {stats.median_weights}g</Statsdetail>\n              <Statsdetail>Weight Deviation: {stats.weights_dev}g</Statsdetail>\n            </StatsWrapper>\n          </StatsContainer>\n\n          <VisualContainer>\n            <ChartContainer>\n              {LineActive ? (\n                <LineChart data={bardetails} />\n              ) : (\n                <BarChart data={bardetails} />\n              )}\n            </ChartContainer>\n\n            {LineActive ? (\n              <ChartChangeH1Bar LineActive onClick={() => setLineActive(false)}>\n                Bar Chart\n              </ChartChangeH1Bar>\n            ) : (\n              <ChartChangeH1Line LineActive onClick={() => setLineActive(true)}>\n                Line Chart\n              </ChartChangeH1Line>\n            )}\n          </VisualContainer>\n        </AnalysisContainer>\n      </SingleBirdContainer>\n\n      <Backbutton onClick={() => history.goBack()}> Back </Backbutton>\n      <ViewEntries\n        to={`/birds/${currentbird_name}/${currentbird_id}/${currentbird_species}/entries`}\n      >\n        View Entries\n      </ViewEntries>\n    </SingleBirdPageWrapper>\n  );\n}\n\nexport default SingleBird;\n"]},"metadata":{},"sourceType":"module"}